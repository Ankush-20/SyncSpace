{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/commonTableModel/MultiLeadModel.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport LeadTable from './Lead';\nimport { getApi } from 'services/api';\nimport { postApi } from 'services/api';\nimport Spinner from 'components/spinner/Spinner';\nimport { GiClick } from \"react-icons/gi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiLeadModel = props => {\n  _s();\n  const {\n    onClose,\n    isOpen,\n    fieldName,\n    setFieldValue\n  } = props;\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const [data, setData] = useState([]);\n  const columns = [{\n    Header: \"#\",\n    accessor: \"_id\",\n    isSortable: false,\n    width: 10\n  }, {\n    Header: 'Lead Name',\n    accessor: 'leadName',\n    width: 20\n  }, {\n    Header: \"Lead Email\",\n    accessor: \"leadEmail\"\n  }, {\n    Header: \"Lead PhoneNumber\",\n    accessor: \"leadPhoneNumber\"\n  }, {\n    Header: \"Lead Address\",\n    accessor: \"leadAddress\"\n  }, {\n    Header: \"Lead Status\",\n    accessor: \"leadStatus\"\n  }, {\n    Header: \"Lead Owner\",\n    accessor: \"leadOwner\"\n  }, {\n    Header: \"Lead Score\",\n    accessor: \"leadScore\"\n  }];\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const fetchLeadData = async () => {\n    setIsLoding(true);\n    let result = await getApi(user.role === 'admin' ? 'api/lead/' : `api/lead/?createBy=${user._id}`);\n    if (result && result.status == 200) {\n      setData(result === null || result === void 0 ? void 0 : result.data);\n    }\n    setIsLoding(false);\n  };\n  const uniqueValues = [...new Set(selectedValues)];\n  const handleSubmit = async () => {\n    try {\n      setIsLoding(true);\n      setFieldValue(fieldName, uniqueValues);\n      onClose();\n      // setSelectedValues([])\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  useEffect(() => {\n    fetchLeadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    size: \"full\",\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Select Lead\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: isLoding ? /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(LeadTable, {\n          tableData: data,\n          type: \"multi\",\n          selectedValues: selectedValues,\n          setSelectedValues: setSelectedValues,\n          columnsData: columns,\n          title: \"Lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"brand\",\n          onClick: handleSubmit,\n          disabled: isLoding ? true : false,\n          leftIcon: /*#__PURE__*/_jsxDEV(GiClick, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 113\n          }, this),\n          children: [\" \", isLoding ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 139\n          }, this) : 'Select']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClose(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(MultiLeadModel, \"aa3wlLvzVIm41LrUXcZ+alAyZtk=\");\n_c = MultiLeadModel;\nexport default MultiLeadModel;\nvar _c;\n$RefreshReg$(_c, \"MultiLeadModel\");","map":{"version":3,"names":["AddIcon","Button","Flex","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","React","useEffect","useState","LeadTable","getApi","postApi","Spinner","GiClick","jsxDEV","_jsxDEV","MultiLeadModel","props","_s","onClose","isOpen","fieldName","setFieldValue","selectedValues","setSelectedValues","isLoding","setIsLoding","data","setData","columns","Header","accessor","isSortable","width","user","JSON","parse","localStorage","getItem","fetchLeadData","result","role","_id","status","uniqueValues","Set","handleSubmit","e","console","log","size","children","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","alignItems","tableData","type","columnsData","title","variant","onClick","disabled","leftIcon","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/commonTableModel/MultiLeadModel.js"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons'\nimport { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport LeadTable from './Lead'\nimport { getApi } from 'services/api'\nimport { postApi } from 'services/api'\nimport Spinner from 'components/spinner/Spinner'\nimport { GiClick } from \"react-icons/gi\";\n\nconst MultiLeadModel = (props) => {\n    const { onClose, isOpen, fieldName, setFieldValue } = props\n    const [selectedValues, setSelectedValues] = useState([]);\n    const [isLoding, setIsLoding] = useState(false)\n    const [data, setData] = useState([])\n\n    const columns = [\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n        { Header: 'Lead Name', accessor: 'leadName', width: 20 },\n        { Header: \"Lead Email\", accessor: \"leadEmail\", },\n        { Header: \"Lead PhoneNumber\", accessor: \"leadPhoneNumber\", },\n        { Header: \"Lead Address\", accessor: \"leadAddress\", },\n        { Header: \"Lead Status\", accessor: \"leadStatus\", },\n        { Header: \"Lead Owner\", accessor: \"leadOwner\", },\n        { Header: \"Lead Score\", accessor: \"leadScore\", },\n    ];\n\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const fetchLeadData = async () => {\n        setIsLoding(true)\n        let result = await getApi(user.role === 'admin' ? 'api/lead/' : `api/lead/?createBy=${user._id}`);\n        if (result && result.status == 200) {\n            setData(result?.data);\n        }\n        setIsLoding(false)\n    }\n    const uniqueValues = [...new Set(selectedValues)];\n\n    const handleSubmit = async () => {\n        try {\n            setIsLoding(true)\n            setFieldValue(fieldName, uniqueValues)\n            onClose()\n            // setSelectedValues([])\n        }\n        catch (e) {\n            console.log(e)\n        }\n        finally {\n            setIsLoding(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchLeadData()\n    }, [])\n\n    return (\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Select Lead</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    {isLoding ?\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                            <Spinner />\n                        </Flex> : <LeadTable tableData={data} type='multi' selectedValues={selectedValues} setSelectedValues={setSelectedValues} columnsData={columns} title=\"Lead\" />}\n                </ModalBody>\n                <ModalFooter>\n                    <Button variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} leftIcon={<GiClick />}> {isLoding ? <Spinner /> : 'Select'}</Button>\n                    <Button onClick={() => onClose()}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n\n    )\n}\n\nexport default MultiLeadModel\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}