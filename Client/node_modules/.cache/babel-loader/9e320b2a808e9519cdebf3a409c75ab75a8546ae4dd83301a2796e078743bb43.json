{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/sidebar/components/Links.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport { NavLink, useLocation } from \"react-router-dom\";\n// chakra imports\nimport { AbsoluteCenter, Box, Divider, Flex, HStack, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SidebarLinks(props) {\n  _s();\n  //   Chakra color mode\n  let location = useLocation();\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\n  let inactiveColor = useColorModeValue(\"secondaryGray.600\", \"secondaryGray.600\");\n  let activeIcon = useColorModeValue(\"brand.500\", \"white\");\n  let textColor = useColorModeValue(\"secondaryGray.500\", \"white\");\n  let brandColor = useColorModeValue(\"brand.500\", \"brand.400\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const {\n    routes\n  } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = routeName => {\n    return location.pathname.includes(routeName);\n  };\n\n  // this function creates the links from the secondary accordions (for example auth -> sign-in -> default)\n  const createLinks = routes => {\n    return routes.map((route, index) => {\n      if (route.category) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"md\",\n            color: activeColor,\n            fontWeight: \"bold\",\n            mx: \"auto\",\n            ps: {\n              sm: \"10px\",\n              xl: \"16px\"\n            },\n            pt: \"18px\",\n            pb: \"12px\",\n            children: route.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), createLinks(route.items)]\n        }, void 0, true);\n      } else if (!route.under && user !== null && user !== void 0 && user.role && route.layout === `/${user.role}` || `/admin` && !route.under && user !== null && user !== void 0 && user.role && route.both === true) {\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: route.both === true ? route.path : route.layout + route.path,\n          children: [route.separator && /*#__PURE__*/_jsxDEV(Box, {\n            position: \"relative\",\n            margin: \"20px 0\",\n            children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AbsoluteCenter, {\n              textTransform: 'capitalize',\n              bg: \"white\",\n              width: 'max-content',\n              padding: \"0 10px\",\n              textAlign: 'center',\n              children: route.separator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), route.icon ? /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              spacing: activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\",\n              py: \"5px\",\n              ps: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(Flex, {\n                w: \"100%\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  color: activeRoute(route.path.toLowerCase()) ? activeIcon : textColor,\n                  me: \"18px\",\n                  children: route.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  me: \"auto\",\n                  color: activeRoute(route.path.toLowerCase()) ? activeColor : textColor,\n                  fontWeight: activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\",\n                  children: route.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                h: \"36px\",\n                w: \"4px\",\n                bg: activeRoute(route.path.toLowerCase()) ? brandColor : \"transparent\",\n                borderRadius: \"5px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              spacing: activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\",\n              py: \"5px\",\n              ps: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                me: \"auto\",\n                color: activeRoute(route.path.toLowerCase()) ? activeColor : inactiveColor,\n                fontWeight: activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\",\n                children: route.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                h: \"36px\",\n                w: \"4px\",\n                bg: \"brand.400\",\n                borderRadius: \"5px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  //  BRAND\n  return createLinks(routes);\n}\n_s(SidebarLinks, \"KVhpCJdjusCCFRapSNvU+NIXlxQ=\", false, function () {\n  return [useLocation, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n_c = SidebarLinks;\nexport default SidebarLinks;\nvar _c;\n$RefreshReg$(_c, \"SidebarLinks\");","map":{"version":3,"names":["NavLink","useLocation","AbsoluteCenter","Box","Divider","Flex","HStack","Text","useColorModeValue","jsxDEV","_jsxDEV","Fragment","_Fragment","SidebarLinks","props","_s","location","activeColor","inactiveColor","activeIcon","textColor","brandColor","user","JSON","parse","localStorage","getItem","routes","activeRoute","routeName","pathname","includes","createLinks","map","route","index","category","children","fontSize","color","fontWeight","mx","ps","sm","xl","pt","pb","name","fileName","_jsxFileName","lineNumber","columnNumber","items","under","role","layout","both","to","path","separator","position","margin","textTransform","bg","width","padding","textAlign","icon","spacing","toLowerCase","py","w","alignItems","justifyContent","me","h","borderRadius","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/sidebar/components/Links.js"],"sourcesContent":["/* eslint-disable */\nimport { NavLink, useLocation } from \"react-router-dom\";\n// chakra imports\nimport { AbsoluteCenter, Box, Divider, Flex, HStack, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nexport function SidebarLinks(props) {\n  //   Chakra color mode\n  let location = useLocation();\n  let activeColor = useColorModeValue(\"gray.700\", \"white\");\n  let inactiveColor = useColorModeValue(\n    \"secondaryGray.600\",\n    \"secondaryGray.600\"\n  );\n  let activeIcon = useColorModeValue(\"brand.500\", \"white\");\n  let textColor = useColorModeValue(\"secondaryGray.500\", \"white\");\n  let brandColor = useColorModeValue(\"brand.500\", \"brand.400\");\n\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  const { routes } = props;\n\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname.includes(routeName);\n  };\n\n\n  // this function creates the links from the secondary accordions (for example auth -> sign-in -> default)\n  const createLinks = (routes) => {\n    return routes.map((route, index) => {\n      if (route.category) {\n        return (\n          <>\n            <Text\n              fontSize={\"md\"}\n              color={activeColor}\n              fontWeight='bold'\n              mx='auto'\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              pt='18px'\n              pb='12px'\n              key={index}>\n              {route.name}\n            </Text>\n            {createLinks(route.items)}\n          </>\n        );\n      } else if (!route.under && user?.role && route.layout === `/${user.role}` || `/admin` && !route.under && user?.role && route.both === true) {\n        return (\n          <NavLink key={index} to={route.both === true ? route.path : route.layout + route.path}>\n            {route.separator &&\n              <Box position='relative' margin='20px 0'>\n                <Divider />\n                <AbsoluteCenter textTransform={'capitalize'} bg='white' width={'max-content'} padding='0 10px' textAlign={'center'}>\n                  {route.separator}\n                </AbsoluteCenter>\n              </Box>\n            }\n            {\n              route.icon ? (\n                <Box>\n                  <HStack\n                    spacing={\n                      activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                    }\n                    py='5px'\n                    ps='10px'>\n                    <Flex w='100%' alignItems='center' justifyContent='center'>\n                      <Box\n                        color={\n                          activeRoute(route.path.toLowerCase())\n                            ? activeIcon\n                            : textColor\n                        }\n                        me='18px'>\n                        {route.icon}\n                      </Box>\n                      <Text\n                        me='auto'\n                        color={\n                          activeRoute(route.path.toLowerCase())\n                            ? activeColor\n                            : textColor\n                        }\n                        fontWeight={\n                          activeRoute(route.path.toLowerCase())\n                            ? \"bold\"\n                            : \"normal\"\n                        }>\n                        {route.name}\n                      </Text>\n                    </Flex>\n                    <Box\n                      h='36px'\n                      w='4px'\n                      bg={\n                        activeRoute(route.path.toLowerCase())\n                          ? brandColor\n                          : \"transparent\"\n                      }\n                      borderRadius='5px'\n                    />\n                  </HStack>\n                </Box>\n              ) : (\n                <Box>\n                  <HStack\n                    spacing={\n                      activeRoute(route.path.toLowerCase()) ? \"22px\" : \"26px\"\n                    }\n                    py='5px'\n                    ps='10px'>\n                    <Text\n                      me='auto'\n                      color={\n                        activeRoute(route.path.toLowerCase())\n                          ? activeColor\n                          : inactiveColor\n                      }\n                      fontWeight={\n                        activeRoute(route.path.toLowerCase()) ? \"bold\" : \"normal\"\n                      }>\n                      {route.name}\n                    </Text>\n                    <Box h='36px' w='4px' bg='brand.400' borderRadius='5px' />\n                  </HStack>\n                </Box>\n              )\n            }\n          </NavLink>\n        );\n      }\n\n    });\n  };\n  //  BRAND\n  return createLinks(routes);\n}\n\nexport default SidebarLinks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}