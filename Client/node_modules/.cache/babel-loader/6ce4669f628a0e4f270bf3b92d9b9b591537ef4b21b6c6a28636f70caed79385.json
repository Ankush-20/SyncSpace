{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/Dropzone.js\",\n  _s = $RefreshSig$();\n// Chakra imports\nimport { Button, Flex, Input, useColorModeValue } from \"@chakra-ui/react\";\n// Assets\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropzone(props) {\n  _s();\n  const {\n    content,\n    ...rest\n  } = props;\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: true,\n    // Set to false if you only want to allow selecting one file\n    onDrop: acceptedFiles => {\n      if (props.img === \"img\") {\n        const imageFiles = acceptedFiles.filter(file => {\n          return file.type.startsWith(\"image/\");\n        });\n        if (imageFiles.length > 0) {\n          props.onFileSelect(imageFiles);\n        }\n      } else if (acceptedFiles.length > 0) {\n        props.onFileSelect(acceptedFiles);\n      }\n    }\n  });\n  const bg = useColorModeValue(\"gray.100\", \"navy.700\");\n  const borderColor = useColorModeValue(\"secondaryGray.100\", \"whiteAlpha.100\");\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    bg: bg,\n    border: \"1px dashed\",\n    borderColor: borderColor,\n    borderRadius: \"16px\",\n    w: \"100%\",\n    h: \"max-content\",\n    minH: \"100%\",\n    cursor: \"pointer\",\n    ...getRootProps({\n      className: \"dropzone\"\n    }),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"file\",\n      variant: \"main\",\n      multiple: true,\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"no-effects\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropzone, \"1IjLDJgKnhOMAMEHXGSAWjlY76Q=\", false, function () {\n  return [useDropzone, useColorModeValue, useColorModeValue];\n});\n_c = Dropzone;\nexport default Dropzone;\nvar _c;\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"names":["Button","Flex","Input","useColorModeValue","React","useDropzone","jsxDEV","_jsxDEV","Dropzone","props","_s","content","rest","getRootProps","getInputProps","multiple","onDrop","acceptedFiles","img","imageFiles","filter","file","type","startsWith","length","onFileSelect","bg","borderColor","align","justify","border","borderRadius","w","h","minH","cursor","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/Dropzone.js"],"sourcesContent":["// Chakra imports\nimport { Button, Flex, Input, useColorModeValue } from \"@chakra-ui/react\";\n// Assets\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nfunction Dropzone(props) {\n  const { content, ...rest } = props;\n  const { getRootProps, getInputProps } = useDropzone({\n    multiple: true, // Set to false if you only want to allow selecting one file\n    onDrop: (acceptedFiles) => {\n      if (props.img === \"img\") {\n        const imageFiles = acceptedFiles.filter((file) => {\n          return file.type.startsWith(\"image/\");\n        })\n        if (imageFiles.length > 0) {\n          props.onFileSelect(imageFiles);\n        }\n      } else if (acceptedFiles.length > 0) {\n        props.onFileSelect(acceptedFiles);\n      }\n\n    },\n  });\n\n  const bg = useColorModeValue(\"gray.100\", \"navy.700\");\n  const borderColor = useColorModeValue(\"secondaryGray.100\", \"whiteAlpha.100\");\n  return (\n    <Flex\n      align='center'\n      justify='center'\n      bg={bg}\n      border='1px dashed'\n      borderColor={borderColor}\n      borderRadius='16px'\n      w='100%'\n      h='max-content'\n      minH='100%'\n      cursor='pointer'\n      {...getRootProps({ className: \"dropzone\" })}\n      {...rest}>\n      <Input type=\"file\" variant='main' multiple {...getInputProps()} />\n      <Button variant='no-effects'>{content}</Button>\n    </Flex>\n  );\n}\n\nexport default Dropzone;\n"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzE;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM;IAAEC,OAAO;IAAE,GAAGC;EAAK,CAAC,GAAGH,KAAK;EAClC,MAAM;IAAEI,YAAY;IAAEC;EAAc,CAAC,GAAGT,WAAW,CAAC;IAClDU,QAAQ,EAAE,IAAI;IAAE;IAChBC,MAAM,EAAGC,aAAa,IAAK;MACzB,IAAIR,KAAK,CAACS,GAAG,KAAK,KAAK,EAAE;QACvB,MAAMC,UAAU,GAAGF,aAAa,CAACG,MAAM,CAAEC,IAAI,IAAK;UAChD,OAAOA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC;QACvC,CAAC,CAAC;QACF,IAAIJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAE;UACzBf,KAAK,CAACgB,YAAY,CAACN,UAAU,CAAC;QAChC;MACF,CAAC,MAAM,IAAIF,aAAa,CAACO,MAAM,GAAG,CAAC,EAAE;QACnCf,KAAK,CAACgB,YAAY,CAACR,aAAa,CAAC;MACnC;IAEF;EACF,CAAC,CAAC;EAEF,MAAMS,EAAE,GAAGvB,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC;EACpD,MAAMwB,WAAW,GAAGxB,iBAAiB,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;EAC5E,oBACEI,OAAA,CAACN,IAAI;IACH2B,KAAK,EAAC,QAAQ;IACdC,OAAO,EAAC,QAAQ;IAChBH,EAAE,EAAEA,EAAG;IACPI,MAAM,EAAC,YAAY;IACnBH,WAAW,EAAEA,WAAY;IACzBI,YAAY,EAAC,MAAM;IACnBC,CAAC,EAAC,MAAM;IACRC,CAAC,EAAC,aAAa;IACfC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,SAAS;IAAA,GACZtB,YAAY,CAAC;MAAEuB,SAAS,EAAE;IAAW,CAAC,CAAC;IAAA,GACvCxB,IAAI;IAAAyB,QAAA,gBACR9B,OAAA,CAACL,KAAK;MAACoB,IAAI,EAAC,MAAM;MAACgB,OAAO,EAAC,MAAM;MAACvB,QAAQ;MAAA,GAAKD,aAAa,CAAC;IAAC;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClEnC,OAAA,CAACP,MAAM;MAACsC,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAE1B;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX;AAAChC,EAAA,CAvCQF,QAAQ;EAAA,QAEyBH,WAAW,EAiBxCF,iBAAiB,EACRA,iBAAiB;AAAA;AAAAwC,EAAA,GApB9BnC,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}