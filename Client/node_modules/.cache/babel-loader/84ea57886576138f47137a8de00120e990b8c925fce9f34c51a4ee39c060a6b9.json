{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/property/components/propertyPhoto.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react';\nimport Spinner from 'components/spinner/Spinner';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { postApi } from 'services/api';\nimport Upload from './Upload';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyPhoto = props => {\n  _s();\n  const {\n    onClose,\n    isOpen,\n    fetchData,\n    text\n  } = props;\n  const [isLoding, setIsLoding] = useState(false);\n  const initialValues = {\n    property: ''\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      AddData();\n      resetForm();\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    setFieldValue\n  } = formik;\n  const AddData = async () => {\n    try {\n      var _response;\n      setIsLoding(true);\n      const formData = new FormData();\n      // Append property to the formData\n      values.property.forEach(file => {\n        formData === null || formData === void 0 ? void 0 : formData.append('property', file);\n      });\n      let response;\n      if (text === 'Property Photos') {\n        response = await postApi(`api/property/add-property-photos/${props.id}`, formData);\n      } else if (text === 'Virtual Tours or Videos') {\n        response = await postApi(`api/property/add-virtual-tours-or-videos/${props.id}`, formData);\n      } else if (text === 'Floor Plans') {\n        response = await postApi(`api/property/add-floor-plans/${props.id}`, formData);\n      } else if (text === 'Property Documents') {\n        response = await postApi(`api/property/add-property-documents/${props.id}`, formData);\n      }\n      if (((_response = response) === null || _response === void 0 ? void 0 : _response.status) === 200) {\n        fetchData();\n        formik.resetForm();\n        onClose();\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    isCentered: true,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [\"Select \", text, \" Images\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(12, 1fr)\",\n          gap: 3,\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: {\n              base: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              count: values.property.length,\n              onFileSelect: file => setFieldValue('property', file),\n              text: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              mb: \"10px\",\n              color: 'red',\n              children: [\" \", errors.property && touched.property && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Please Select \", text]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"brand\",\n          onClick: handleSubmit,\n          disabled: isLoding ? true : false,\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 114\n          }, this),\n          children: isLoding ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 139\n          }, this) : 'Add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            onClose();\n            formik.resetForm();\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(PropertyPhoto, \"j9EvLgFu9T/wvYVxZnONWCebeas=\", false, function () {\n  return [useFormik];\n});\n_c = PropertyPhoto;\nexport default PropertyPhoto;\nvar _c;\n$RefreshReg$(_c, \"PropertyPhoto\");","map":{"version":3,"names":["AddIcon","Button","Grid","GridItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Text","Spinner","useFormik","useState","postApi","Upload","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyPhoto","props","_s","onClose","isOpen","fetchData","text","isLoding","setIsLoding","initialValues","property","formik","onSubmit","values","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","_response","formData","FormData","forEach","file","append","response","id","status","e","console","log","isCentered","children","fileName","_jsxFileName","lineNumber","columnNumber","templateColumns","gap","colSpan","base","count","length","onFileSelect","mb","color","variant","onClick","disabled","rightIcon","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/property/components/propertyPhoto.js"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons'\nimport { Button, Grid, GridItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\nimport Spinner from 'components/spinner/Spinner'\nimport { useFormik } from 'formik'\nimport { useState } from 'react'\nimport { postApi } from 'services/api'\nimport Upload from './Upload'\n\nconst PropertyPhoto = (props) => {\n    const { onClose, isOpen, fetchData, text } = props\n    const [isLoding, setIsLoding] = useState(false)\n\n    const initialValues = {\n        property: ''\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        onSubmit: (values, { resetForm }) => {\n            AddData();\n            resetForm();\n        },\n    });\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\n\n    const AddData = async () => {\n        try {\n            setIsLoding(true)\n            const formData = new FormData();\n            // Append property to the formData\n            values.property.forEach((file) => {\n                formData?.append('property', file);\n            });\n            let response;\n            if (text === 'Property Photos') {\n                response = await postApi(`api/property/add-property-photos/${props.id}`, formData);\n            } else if (text === 'Virtual Tours or Videos') {\n                response = await postApi(`api/property/add-virtual-tours-or-videos/${props.id}`, formData);\n            } else if (text === 'Floor Plans') {\n                response = await postApi(`api/property/add-floor-plans/${props.id}`, formData);\n            } else if (text === 'Property Documents') {\n                response = await postApi(`api/property/add-property-documents/${props.id}`, formData);\n            }\n\n            if (response?.status === 200) {\n                fetchData();\n                formik.resetForm()\n                onClose();\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n        finally {\n            setIsLoding(false)\n        }\n    };\n\n\n    return (\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Select {text} Images</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\n                        <GridItem colSpan={{ base: 12 }}>\n                            <Upload count={values.property.length} onFileSelect={(file) => setFieldValue('property', file)} text={text} />\n                            <Text mb='10px' color={'red'}> {errors.property && touched.property && <>Please Select {text}</>}</Text>\n                        </GridItem>\n                    </Grid>\n                </ModalBody>\n                <ModalFooter>\n                    <Button variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} rightIcon={<AddIcon />}>{isLoding ? <Spinner /> : 'Add'}</Button>\n                    <Button onClick={() => {\n                        onClose()\n                        formik.resetForm()\n                    }}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    )\n}\n\nexport default PropertyPhoto\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}