{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/calender/components/calender.js\",\n  _s = $RefreshSig$();\nimport FullCalendar from '@fullcalendar/react';\nimport Card from 'components/card/Card';\nimport { useEffect, useState } from 'react';\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from '@fullcalendar/list';\nimport multiMonthPlugin from '@fullcalendar/multimonth';\nimport timeGridPlugin from '@fullcalendar/timegrid';\n// import EventView from '../eventView';\nimport { useBreakpointValue, useDisclosure } from '@chakra-ui/react';\nimport AddTask from 'views/admin/task/components/addTask';\nimport EventView from 'views/admin/task/eventView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calender = props => {\n  _s();\n  const {\n    data,\n    fetchData\n  } = props;\n  const [eventView, setEventView] = useState(false);\n  const [info, setInfo] = useState();\n  const [date, setDate] = useState();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const handleDateClick = arg => {\n    onOpen();\n    setDate(arg.dateStr);\n  };\n  function handleEventClick(info) {\n    if (info.event.url) {\n      info.jsEvent.preventDefault();\n      window.open(info.event.url);\n    }\n    setEventView(true);\n    // onOpen()\n    // alert('Event: ' + info.event.title);\n    // alert('View: ' + info.view.type);\n\n    setInfo(info);\n    // info.el.style.borderColor = 'red';\n  }\n  const [currentView, setCurrentView] = useState('');\n  useEffect(() => {\n    // Set the initial view to 'dayGridMonth' when the component mounts\n    setCurrentView('dayGridMonth');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(AddTask, {\n        isOpen: isOpen,\n        fetchData: fetchData,\n        onClose: onClose,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EventView, {\n        fetchData: fetchData,\n        isOpen: eventView,\n        onClose: setEventView,\n        info: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, multiMonthPlugin]\n        // initialView=\"dayGridMonth\"\n        ,\n        initialView: currentView,\n        height: \"600px\",\n        dateClick: handleDateClick,\n        events: data,\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek,multiMonthFourMonth'\n        },\n        eventClick: handleEventClick,\n        buttonText: {\n          today: 'Today',\n          dayGridMonth: 'Month',\n          timeGridWeek: 'Week',\n          timeGridDay: 'Day',\n          listWeek: 'List'\n        },\n        views: {\n          multiMonthFourMonth: {\n            type: 'multiMonth',\n            buttonText: 'Multi Month',\n            duration: {\n              months: useBreakpointValue({\n                base: 4,\n                lg: 4,\n                xl: 6\n              })\n            }\n          }\n        },\n        eventClassNames: \"custom-fullcalendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Calender, \"kvHaDuaOJ+S/CvY1Q+m9GbA6Rw8=\", false, function () {\n  return [useDisclosure, useBreakpointValue];\n});\n_c = Calender;\nexport default Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["FullCalendar","Card","useEffect","useState","dayGridPlugin","interactionPlugin","listPlugin","multiMonthPlugin","timeGridPlugin","useBreakpointValue","useDisclosure","AddTask","EventView","jsxDEV","_jsxDEV","Calender","props","_s","data","fetchData","eventView","setEventView","info","setInfo","date","setDate","isOpen","onOpen","onClose","handleDateClick","arg","dateStr","handleEventClick","event","url","jsEvent","preventDefault","window","open","currentView","setCurrentView","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","height","dateClick","events","headerToolbar","left","center","right","eventClick","buttonText","today","dayGridMonth","timeGridWeek","timeGridDay","listWeek","views","multiMonthFourMonth","type","duration","months","base","lg","xl","eventClassNames","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/calender/components/calender.js"],"sourcesContent":["import FullCalendar from '@fullcalendar/react';\nimport Card from 'components/card/Card';\nimport { useEffect, useState } from 'react';\n\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from '@fullcalendar/list';\nimport multiMonthPlugin from '@fullcalendar/multimonth';\nimport timeGridPlugin from '@fullcalendar/timegrid';\n// import EventView from '../eventView';\nimport { useBreakpointValue, useDisclosure } from '@chakra-ui/react';\nimport AddTask from 'views/admin/task/components/addTask';\nimport EventView from 'views/admin/task/eventView';\n\n\n\nconst Calender = (props) => {\n    const { data, fetchData } = props\n    const [eventView, setEventView] = useState(false)\n    const [info, setInfo] = useState()\n    const [date, setDate] = useState()\n\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    const handleDateClick = (arg) => {\n        onOpen()\n        setDate(arg.dateStr)\n    }\n\n    function handleEventClick(info) {\n        if (info.event.url) {\n            info.jsEvent.preventDefault();\n            window.open(info.event.url);\n        }\n        setEventView(true)\n        // onOpen()\n        // alert('Event: ' + info.event.title);\n        // alert('View: ' + info.view.type);\n\n        setInfo(info)\n        // info.el.style.borderColor = 'red';\n    }\n    const [currentView, setCurrentView] = useState('');\n\n    useEffect(() => {\n        // Set the initial view to 'dayGridMonth' when the component mounts\n        setCurrentView('dayGridMonth');\n    }, []);\n\n    return (\n        <div>\n            <Card >\n                <AddTask isOpen={isOpen} fetchData={fetchData} onClose={onClose} date={date} />\n                <EventView fetchData={fetchData} isOpen={eventView} onClose={setEventView} info={info} />\n\n                <FullCalendar\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, multiMonthPlugin]}\n                    // initialView=\"dayGridMonth\"\n                    initialView={currentView}\n                    height=\"600px\"\n                    dateClick={handleDateClick}\n                    events={data}\n                    headerToolbar={{\n                        left: 'prev,next today',\n                        center: 'title',\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek,multiMonthFourMonth'\n                    }}\n                    eventClick={handleEventClick}\n                    buttonText={{\n                        today: 'Today',\n                        dayGridMonth: 'Month',\n                        timeGridWeek: 'Week',\n                        timeGridDay: 'Day',\n                        listWeek: 'List',\n                    }}\n                    views={{\n                        multiMonthFourMonth: {\n                            type: 'multiMonth',\n                            buttonText: 'Multi Month',\n                            duration: { months: useBreakpointValue({ base: 4, lg: 4, xl: 6 }) },\n                        }\n                    }}\n                    eventClassNames=\"custom-fullcalendar\"\n                />\n\n            </Card>\n        </div>\n    )\n}\n\nexport default Calender\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}