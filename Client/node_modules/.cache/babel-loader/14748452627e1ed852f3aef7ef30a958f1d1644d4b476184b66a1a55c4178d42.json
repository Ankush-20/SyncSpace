{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/meeting/index.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Button, Grid, GridItem } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { getApi } from 'services/api';\nimport AddMeeting from \"./components/Addmeeting\";\nimport CheckTable from './components/CheckTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const columns = [{\n    Header: \"#\",\n    accessor: \"_id\",\n    isSortable: false,\n    width: 10\n  }, {\n    Header: 'agenda',\n    accessor: 'agenda'\n  }, {\n    Header: \"date Time\",\n    accessor: \"dateTime\"\n  }, {\n    Header: \"time stamp\",\n    accessor: \"timestamp\"\n  }, {\n    Header: \"create By\",\n    accessor: \"createdByName\"\n  }];\n  const [data, setData] = useState([]);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [isLoding, setIsLoding] = useState(false);\n  const fetchData = async () => {\n    setIsLoding(true);\n    let result = await getApi(user.role === 'admin' ? 'api/meeting' : `api/meeting?createdBy=${user._id}`);\n    setData(result === null || result === void 0 ? void 0 : result.data);\n    setIsLoding(false);\n  };\n  const [addMeeting, setMeeting] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, [addMeeting]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(6, 1fr)\",\n      mb: 3,\n      gap: 1,\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        colStart: 6,\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setMeeting(true),\n          leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 72\n          }, this),\n          variant: \"brand\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckTable, {\n      isOpen: addMeeting,\n      isLoding: isLoding,\n      data: data,\n      columnsData: columns,\n      className: \"table-fix-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddMeeting, {\n      isOpen: addMeeting,\n      onClose: setMeeting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Index, \"SiMR59wOh+O9FlDYAqlt62P1Py0=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["AddIcon","Button","Grid","GridItem","useEffect","useState","getApi","AddMeeting","CheckTable","jsxDEV","_jsxDEV","Index","_s","columns","Header","accessor","isSortable","width","data","setData","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","fetchData","result","role","_id","addMeeting","setMeeting","children","templateColumns","mb","gap","colStart","textAlign","onClick","leftIcon","fileName","_jsxFileName","lineNumber","columnNumber","variant","isOpen","columnsData","className","onClose","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/views/admin/meeting/index.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\nimport { Button, Grid, GridItem } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { getApi } from 'services/api';\nimport AddMeeting from \"./components/Addmeeting\";\nimport CheckTable from './components/CheckTable';\n\n\nconst Index = () => {\n    const columns = [\n        {\n            Header: \"#\",\n            accessor: \"_id\",\n            isSortable: false,\n            width: 10\n        },\n        { Header: 'agenda', accessor: 'agenda' },\n        { Header: \"date Time\", accessor: \"dateTime\", },\n        { Header: \"time stamp\", accessor: \"timestamp\", },\n        { Header: \"create By\", accessor: \"createdByName\", },\n\n    ];\n\n    const [data, setData] = useState([])\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const [isLoding, setIsLoding] = useState(false)\n\n    const fetchData = async () => {\n        setIsLoding(true)\n        let result = await getApi(user.role === 'admin' ? 'api/meeting' : `api/meeting?createdBy=${user._id}`);\n        setData(result?.data);\n        setIsLoding(false)\n    }\n\n    const [addMeeting, setMeeting] = useState(false);\n\n    useEffect(() => {\n        fetchData()\n    }, [addMeeting])\n\n    return (\n        <div>\n            <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\n                <GridItem colStart={6} textAlign={\"right\"}>\n                    <Button onClick={() => setMeeting(true)} leftIcon={<AddIcon />} variant=\"brand\">Add</Button>\n                </GridItem>\n            </Grid>\n\n            {/* <CheckTable columnsData={columns} tableData={data} /> */}\n            <CheckTable isOpen={addMeeting} isLoding={isLoding} data={data} columnsData={columns} className='table-fix-container' />\n            {/* Add Form */}\n            <AddMeeting isOpen={addMeeting} onClose={setMeeting} />\n        </div>\n    )\n}\n\nexport default Index\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}