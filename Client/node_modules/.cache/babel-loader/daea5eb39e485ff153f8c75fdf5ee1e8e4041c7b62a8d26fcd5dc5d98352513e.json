{"ast":null,"code":"var _jsxFileName = \"/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/commonTableModel/ContactModel.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from '@chakra-ui/icons';\nimport { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport ContactTable from './Contact.js';\nimport { getApi } from 'services/api';\nimport { postApi } from 'services/api';\nimport Spinner from 'components/spinner/Spinner';\nimport { GiClick } from \"react-icons/gi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactModel = props => {\n  _s();\n  const {\n    onClose,\n    isOpen,\n    fieldName,\n    setFieldValue\n  } = props;\n  const [selectedValues, setSelectedValues] = useState();\n  const [isLoding, setIsLoding] = useState(false);\n  const [data, setData] = useState([]);\n  const columns = [{\n    Header: \"#\",\n    accessor: \"_id\",\n    isSortable: false,\n    width: 10\n  }, {\n    Header: 'title',\n    accessor: 'title'\n  }, {\n    Header: \"first Name\",\n    accessor: \"firstName\"\n  }, {\n    Header: \"last Name\",\n    accessor: \"lastName\"\n  }, {\n    Header: \"phone Number\",\n    accessor: \"phoneNumber\"\n  }, {\n    Header: \"Email Address\",\n    accessor: \"email\"\n  }, {\n    Header: \"physical Address\",\n    accessor: \"physicalAddress\"\n  }, {\n    Header: \"mailing Address\",\n    accessor: \"mailingAddress\"\n  }, {\n    Header: \"Contact Method\",\n    accessor: \"preferredContactMethod\"\n  }];\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const fetchContactData = async () => {\n    setIsLoding(true);\n    let result = await getApi(user.role === 'admin' ? 'api/contact/' : `api/contact/?createBy=${user._id}`);\n    if (result && result.status == 200) {\n      setData(result === null || result === void 0 ? void 0 : result.data);\n    }\n    setIsLoding(false);\n  };\n  const handleSubmit = async () => {\n    try {\n      setIsLoding(true);\n      setFieldValue(fieldName, selectedValues);\n      onClose();\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setIsLoding(false);\n    }\n  };\n  useEffect(() => {\n    fetchContactData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    size: \"full\",\n    isOpen: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Select Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: isLoding ? /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(ContactTable, {\n          tableData: data,\n          selectedValues: selectedValues,\n          setSelectedValues: setSelectedValues,\n          columnsData: columns,\n          title: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"brand\",\n          onClick: handleSubmit,\n          disabled: isLoding ? true : false,\n          leftIcon: /*#__PURE__*/_jsxDEV(GiClick, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 113\n          }, this),\n          children: [\" \", isLoding ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 139\n          }, this) : 'Select']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClose(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactModel, \"cSPfGDoKJmbrY7j4+x5QKtbqBTs=\");\n_c = ContactModel;\nexport default ContactModel;\nvar _c;\n$RefreshReg$(_c, \"ContactModel\");","map":{"version":3,"names":["AddIcon","Button","Flex","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","React","useEffect","useState","ContactTable","getApi","postApi","Spinner","GiClick","jsxDEV","_jsxDEV","ContactModel","props","_s","onClose","isOpen","fieldName","setFieldValue","selectedValues","setSelectedValues","isLoding","setIsLoding","data","setData","columns","Header","accessor","isSortable","width","user","JSON","parse","localStorage","getItem","fetchContactData","result","role","_id","status","handleSubmit","e","console","log","size","children","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","alignItems","tableData","columnsData","title","variant","onClick","disabled","leftIcon","_c","$RefreshReg$"],"sources":["/Users/ankushrandhawa/Downloads/full-stack-crm-main/Client/src/components/commonTableModel/ContactModel.js"],"sourcesContent":["import { AddIcon } from '@chakra-ui/icons'\nimport { Button, Flex, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport ContactTable from './Contact.js'\nimport { getApi } from 'services/api'\nimport { postApi } from 'services/api'\nimport Spinner from 'components/spinner/Spinner'\nimport { GiClick } from \"react-icons/gi\";\n\nconst ContactModel = (props) => {\n    const { onClose, isOpen, fieldName, setFieldValue } = props\n    const [selectedValues, setSelectedValues] = useState();\n    const [isLoding, setIsLoding] = useState(false)\n    const [data, setData] = useState([])\n\n    const columns = [\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\n        { Header: 'title', accessor: 'title' },\n        { Header: \"first Name\", accessor: \"firstName\", },\n        { Header: \"last Name\", accessor: \"lastName\", },\n        { Header: \"phone Number\", accessor: \"phoneNumber\", },\n        { Header: \"Email Address\", accessor: \"email\", },\n        { Header: \"physical Address\", accessor: \"physicalAddress\", },\n        { Header: \"mailing Address\", accessor: \"mailingAddress\", },\n        { Header: \"Contact Method\", accessor: \"preferredContactMethod\", },\n    ];\n\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const fetchContactData = async () => {\n        setIsLoding(true)\n        let result = await getApi(user.role === 'admin' ? 'api/contact/' : `api/contact/?createBy=${user._id}`);\n        if (result && result.status == 200) {\n            setData(result?.data);\n        }\n        setIsLoding(false)\n    }\n\n    const handleSubmit = async () => {\n        try {\n            setIsLoding(true)\n            setFieldValue(fieldName, selectedValues)\n            onClose()\n        }\n        catch (e) {\n            console.log(e)\n        }\n        finally {\n            setIsLoding(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchContactData()\n    }, [])\n\n    return (\n        <Modal onClose={onClose} size='full' isOpen={isOpen} >\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Select Contact</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    {isLoding ?\n                        <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\n                            <Spinner />\n                        </Flex> : <ContactTable tableData={data} selectedValues={selectedValues} setSelectedValues={setSelectedValues} columnsData={columns} title=\"Contact\" />}\n                </ModalBody>\n                <ModalFooter>\n                    <Button variant='brand' onClick={handleSubmit} disabled={isLoding ? true : false} leftIcon={<GiClick />}> {isLoding ? <Spinner /> : 'Select'}</Button>\n                    <Button onClick={() => onClose()}>Close</Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n\n    )\n}\n\nexport default ContactModel\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}