'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('@chakra-ui/react');
var recoil = require('recoil');
var React = require('react');
var produce = require('immer');
var fa = require('react-icons/fa');
var ri = require('react-icons/ri');
var gr = require('react-icons/gr');
var si = require('react-icons/si');
var md = require('react-icons/md');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var produce__default = /*#__PURE__*/_interopDefaultLegacy(produce);

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$b = function() {
    __assign$b = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$b.apply(this, arguments);
};

function mode$5(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid$5 = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode$5('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode$5('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode$5('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode$5(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode$5(color, 'gray.800')(props),
        _hover: {
            bg: mode$5(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode$5(activeBg, c + ".400")(props) },
    };
};

var components$5 = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$5('primary.500', 'primary.200')(props),
                    borderColor: mode$5('primary.500', 'primary.200')(props),
                    color: mode$5('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$5('v.600', 'primary.300')(props),
                        borderColor: mode$5('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$5('gray.200', 'transparent')(props),
                        bg: mode$5('gray.200', 'whiteAlpha.300')(props),
                        color: mode$5('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$5('primary.500', 'primary.200')(props),
                    borderColor: mode$5('primary.500', 'primary.200')(props),
                    color: mode$5('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$5('v.600', 'primary.300')(props),
                        borderColor: mode$5('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$5('gray.200', 'transparent')(props),
                        bg: mode$5('gray.200', 'whiteAlpha.300')(props),
                        color: mode$5('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode$5('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode$5('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode$5('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid$5,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode$5('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode$5('1px', '1px')(props),
                    borderColor: mode$5('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode$5('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode$5('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode$5('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode$5(c + ".600", c + ".300")(props),
                            borderRightColor: mode$5('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode$5('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode$5('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config$5 = {
    useSystemColorMode: false,
};

var fonts$5 = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors$5 = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles$5 = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode$5('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes$5 = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows$5 = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii$5 = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme$5 = {
    config: config$5,
    styles: styles$5,
    fonts: fonts$5,
    colors: colors$5,
    sizes: sizes$5,
    shadows: shadows$5,
    radii: radii$5,
    components: components$5,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
var theme = react.extendTheme(__assign$b(__assign$b({}, customTheme$5), { config: __assign$b(__assign$b({}, customTheme$5.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$a = function() {
    __assign$a = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$a.apply(this, arguments);
};

function __rest$5(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __spreadArray$1(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

// theme.colors
var setThemeSingleColor$5 = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor$5 = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette$5 = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor$5(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors$5 = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor$5(token, colors[token]);
        }
        else {
            setThemeColorPalette$5(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont$5 = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts$5 = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont$5(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes$5 = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize$5(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings$5 = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing$5(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights$5 = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight$5(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows$5 = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow$5(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings$5 = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing$5(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius$5 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses$5 = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius$5(size, radii[size]);
    }
};
var setThemeTokens$5 = function (theme) {
    setThemeColors$5(theme.colors);
    setThemeTypograghyFontSizes$5(theme.fontSizes);
    setThemeTypographyFonts$5(theme.fonts);
    setThemeTypographyLetterSpacings$5(theme.letterSpacings);
    setThemeTypographyLineHeights$5(theme.lineHeights);
    setThemeShadows$5(theme.shadows);
    setThemeBorderRadiuses$5(theme.radii);
    setThemeSpacings$5(theme.space);
};

// export const API_ENDPOINT = 'http://localhost:4000'
var API_ENDPOINT = 'https://api.hyperthe.me';
var THEME_STATE_LOCAL_STORAGE_KEY$5 = 'hypertheme-edit-state';
var GOOGLE_FONTS_LOCAL_STORAGE_KEY$4 = 'hypertheme-google-fonts-state';
var COLOR_PICKER_TRANSPARENT_SAFE_BG_B64 = [
    'iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFXSURBVHgB7d3BCcJAFEXRiViH4MJ2LNZ2sgikEa0iM3A9p4PhMsvP2/bj/IwFXs/Heyzwb++9DdIEjhM4TuA4geMEjhM4TuA4geMEjhM4TuA4geMEjhM4TuA4geMEjhM4TuA4geMEjhM4TuA4geMEjhM4TuA4geO2sYirxjn84DiB4wSOEzhO4DiB4wSOEzhO4DiB4wSOEzhO4DiB4wSOEzhO4DiB4wSOEzhO4DiB4wSOEzhO4DiB4wSOEzhO4LjNld8ctgu5hMBxAscJHCdwnMBxAscJHCdwnMBxAscJHCdwnMBxAscJHCdwnMBxAscJHCdwnMBxAscJHCdwnMBxAscJHHcfLLEf55RZQduFk9gu5BICxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3Cc68J5vmOBH2JAIyklQWkKAAAAAElFTkSuQmCC',
    'iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAFYSURBVHgB7d2xDQJBDADBe0Q9hISUQLGUQEhIQ1AFZ2mZ6cBaObR8rCGX6+2xBrxfz/saMDXvaZEmcJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRx3uPLbY2peGxwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRx3rCGuGvewwXECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3CcwHECxwkcJ3DcebHbZ23kd+EmfhfyEwLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncJzAcQLHCRwncNy/XxduvfSb8AX+bh2Xn9jf+AAAAABJRU5ErkJggg==',
];

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
var themeEditorState$1 = recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY$5, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens$5(newValue.currentTheme);
                }
            });
        },
    ],
});
/**
 * An hook to manage the current ThemeEditorState
 *
 * @returns an object with the curent ThemeEditorState and history actions: {@link useThemeEditorReturn}
 */
var useThemeEditor$1 = function () {
    var _a = recoil.useRecoilState(themeEditorState$1), _b = _a[0], currentTheme = _b.currentTheme, undone = _b.undone, undoable = _b.undoable, initialTheme = _b.initialTheme, setThemeState = _a[1];
    var setTheme = React.useCallback(function (theme) {
        var newPatches = [];
        var newInversePatches = [];
        var newTheme = produce__default["default"](currentTheme, function (draft) {
            if (!theme) {
                return produce.nothing;
            }
            else {
                return theme;
            }
        }, function (patches, inversePatches) {
            newPatches = patches;
            newInversePatches = inversePatches;
        });
        var newUndoable = __spreadArray$1([], undoable, true);
        if (newUndoable.length >= 10) {
            newUndoable.pop();
        }
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undoable: __spreadArray$1([{ patches: newPatches, inversePatches: newInversePatches }], newUndoable, true),
            undone: [],
        });
    }, [currentTheme, initialTheme, setThemeState, undoable]);
    var undo = React.useCallback(function () {
        var lastPatches = undoable[0];
        var newUndone = __spreadArray$1([lastPatches], undone, true);
        var newUndoable = undoable.slice(1);
        var newTheme = produce.applyPatches(currentTheme, lastPatches.inversePatches);
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undone: newUndone,
            undoable: newUndoable,
        });
    }, [currentTheme, initialTheme, setThemeState, undoable, undone]);
    var redo = React.useCallback(function () {
        var nextPatches = undone[0];
        var newUndoable = __spreadArray$1([nextPatches], undoable, true);
        var newUndone = undone.slice(1);
        var newTheme = produce.applyPatches(currentTheme, nextPatches.patches);
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undone: newUndone,
            undoable: newUndoable,
        });
    }, [currentTheme, initialTheme, setThemeState, undoable, undone]);
    return {
        initialTheme: initialTheme,
        theme: currentTheme,
        setTheme: setTheme,
        canUndo: undoable.length > 0,
        undo: undo,
        canRedo: undone.length > 0,
        redo: redo,
    };
};

var themeColorKeys = [
    'transparent',
    'current',
    'black',
    'white',
    'whiteAlpha',
    'blackAlpha',
    'gray',
    'red',
    'orange',
    'yellow',
    'green',
    'teal',
    'blue',
    'cyan',
    'purple',
    'pink',
    'linkedin',
    'facebook',
    'messenger',
    'whatsapp',
    'twitter',
    'telegram',
];

var googleFontFamiliesState = recoil.atom({
    key: 'googleFontFamiliesState',
    default: {
        initialized: false,
        toLoadFonts: [],
        fonts: [],
        fontFamilies: [],
        toLoadVariants: {},
    },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else if (newValue.initialized) {
                    localStorage.setItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY$4, JSON.stringify({
                        toLoadFonts: newValue.toLoadFonts,
                        toLoadVariants: newValue.toLoadVariants,
                    }));
                }
            });
        },
    ],
});
var useGoogleFontFamiliesState = function () { return recoil.useRecoilState(googleFontFamiliesState); };
var useGoogleFontFamiliesValue = function () { return recoil.useRecoilValue(googleFontFamiliesState); };

var safeJsonParse$1 = function (text) {
    try {
        return {
            value: JSON.parse(text),
        };
    }
    catch (ex) {
        return {
            error: ex,
        };
    }
};

var cx$5 = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr$5 = function (condition) {
    return (condition ? '' : undefined);
};
var IconSwitch = react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest$5(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest$5(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign$a({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign$a(__assign$a({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign$a({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign$a({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign$a({}, getRootProps(), { className: cx$5('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign$a({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign$a({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr$5(state.isChecked), "data-hover": dataAttr$5(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign$a({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var ColorModeToggle = function (props) {
    var _a = props.size, size = _a === void 0 ? 'md' : _a, showLabel = props.showLabel; props.colorScheme; var fontSize = props.fontSize, rest = __rest$5(props, ["size", "showLabel", "colorScheme", "fontSize"]);
    var _c = react.useColorMode(), colorMode = _c.colorMode, toggleColorMode = _c.toggleColorMode;
    return (React__default["default"].createElement(react.Stack, __assign$a({ direction: "row", alignItems: "center", justifyContent: "center", display: "inline-flex" }, rest),
        showLabel && (React__default["default"].createElement(react.Text, { fontSize: fontSize || size, textTransform: "capitalize" }, colorMode)),
        React__default["default"].createElement(IconSwitch, { size: size, color: colorMode == 'light' ? 'yellow.400' : 'yellow.600', bgColor: colorMode == 'light' ? 'gray.200' : 'blue.600', d: "flex", isChecked: colorMode == 'dark', value: colorMode, falseIcon: fa.FaSun, trueIcon: ri.RiMoonClearFill, onChange: toggleColorMode })));
};

var EmptyBox = function (_a) {
    var _b = _a.icon, IconComp = _b === void 0 ? fa.FaSearch : _b, _c = _a.title, title = _c === void 0 ? 'Search font family' : _c, _d = _a.subtitle, subtitle = _d === void 0 ? 'No font family selected' : _d, children = _a.children, rest = __rest$5(_a, ["icon", "title", "subtitle", "children"]);
    var bgColor = react.useColorModeValue('gray.100', 'gray.900');
    return (React__default["default"].createElement(react.Stack, __assign$a({ bgColor: bgColor, alignItems: "center", justifyContent: "center", borderRadius: "md", textAlign: "center", h: "300px", w: "100%", p: 8 }, rest),
        React__default["default"].createElement(react.Icon, { as: IconComp, fontSize: "3xl" }),
        React__default["default"].createElement(react.Heading, { fontSize: "xl" }, title),
        React__default["default"].createElement(react.Text, { opacity: "0.8" }, subtitle),
        children && React__default["default"].createElement(react.Flex, { alignItems: "center" }, children)));
};

var BaseList = function (props) {
    var children = props.children, rest = __rest$5(props, ["children"]);
    var bgColor = react.useColorModeValue('white', 'gray.800');
    var shadow = react.useColorModeValue('surface', 'surfaceDark');
    return (React__default["default"].createElement(react.Stack, __assign$a({ bgColor: bgColor, shadow: shadow, p: "0.75rem", borderRadius: "md", spacing: "0.5rem" }, rest), children));
};

var BaseListItem = function (_a) {
    var title = _a.title, subtitle = _a.subtitle, _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, children = _a.children, Icon = _a.icon, _c = _a.endIcon, endIcon = _c === void 0 ? React__default["default"].createElement(fa.FaArrowRight, null) : _c, isClickable = _a.isClickable, rest = __rest$5(_a, ["title", "subtitle", "colorScheme", "children", "icon", "endIcon", "isClickable"]);
    var focusBgColor = react.useColorModeValue(colorScheme + ".100", colorScheme + ".800");
    return (React__default["default"].createElement(react.Box, __assign$a({ w: "auto", d: "flex", pos: "relative", borderRadius: "md", overflow: "hidden", p: "1rem", alignItems: "flex-start", cursor: isClickable ? 'pointer' : undefined, _hover: { bgColor: isClickable && focusBgColor } }, rest),
        React__default["default"].createElement(react.Stack, { alignItems: rest.alignItems, w: "100%", spacing: "0.125rem", overflow: "visible" },
            React__default["default"].createElement(react.Flex, { alignItems: "center", h: "100%" },
                Icon && (React__default["default"].createElement(react.Circle, { size: "25px", bgColor: colorScheme + ".200", color: colorScheme + ".600", fontSize: "sm", mr: "0.5rem" },
                    React__default["default"].createElement(Icon, null))),
                title && (React__default["default"].createElement(react.Text, { fontSize: "md", d: "flex", alignContent: "space-between", textOverflow: "ellipsis", overflow: "scroll", alignSelf: "center" }, title)),
                children),
            subtitle && (React__default["default"].createElement(react.Text, { fontSize: "xs", textOverflow: "ellipsis", overflow: "scroll" }, subtitle))),
        endIcon && isClickable && (React__default["default"].createElement(react.Flex, { color: colorScheme + ".600", fontSize: "sm", pos: "absolute", right: 3, top: 0, h: "100%", alignItems: "center" }, React__default["default"].cloneElement(endIcon, {})))));
};

var BaseMenu = function (props) {
    var children = props.children, _a = props.title, title = _a === void 0 ? 'Menu 4' : _a, subtitle = props.subtitle, trigger = props.trigger, buttonProps = props.buttonProps, hasPortal = props.hasPortal, rest = __rest$5(props, ["children", "title", "subtitle", "trigger", "buttonProps", "hasPortal"]);
    var shadow = react.useColorModeValue('lg', 'xl');
    var List = React.useCallback(function () {
        return (React__default["default"].createElement(react.MenuList, { p: 0, d: "flex", flexDir: "column", overflow: "hidden", shadow: shadow, zIndex: 1 },
            subtitle && (React__default["default"].createElement(React__default["default"].Fragment, null,
                React__default["default"].createElement(react.Flex, { justifyContent: "space-between", p: "0.5rem" },
                    React__default["default"].createElement(react.Text, null, subtitle)),
                React__default["default"].createElement(react.Divider, { mt: 0 }))),
            React__default["default"].createElement(react.Stack, { spacing: "0.5rem", p: "0.5rem" }, children)));
    }, [subtitle, children]);
    return (React__default["default"].createElement(react.Menu, __assign$a({ placement: "bottom", isLazy: true }, rest),
        React__default["default"].createElement(react.MenuButton, __assign$a({}, buttonProps), trigger || (React__default["default"].createElement(react.Flex, { alignItems: "center" },
            title,
            React__default["default"].createElement(react.Text, { as: fa.FaChevronDown, ml: "0.5rem", fontSize: "xs" })))),
        hasPortal ? (React__default["default"].createElement(react.Portal, null,
            React__default["default"].createElement(List, null))) : (React__default["default"].createElement(List, null))));
};

var BaseMenuItem = function (_a) {
    var subtitle = _a.subtitle, _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, children = _a.children, Icon = _a.icon, _c = _a.endIcon, EndIcon = _c === void 0 ? fa.FaArrowRight : _c, rest = __rest$5(_a, ["subtitle", "colorScheme", "children", "icon", "endIcon"]);
    var focusBgColor = react.useColorModeValue(colorScheme + ".100", colorScheme + ".800");
    return (React__default["default"].createElement(react.MenuItem, __assign$a({ w: "auto", d: "flex", flexDir: "column", bgSize: "cover", pos: "relative", borderRadius: "md", zIndex: 0, overflow: "hidden", p: "1rem", alignItems: "flex-start", _focus: { bgColor: focusBgColor }, pr: "1.5rem" }, rest),
        React__default["default"].createElement(react.Stack, { alignItems: "flex-start", spacing: "0.125rem", pr: "1.5rem" },
            React__default["default"].createElement(react.Flex, { alignItems: "center" },
                Icon && (React__default["default"].createElement(react.Circle, { size: "25px", bgColor: colorScheme + ".200", color: colorScheme + ".600", fontSize: "sm", mr: "0.5rem" },
                    React__default["default"].createElement(Icon, null))),
                React__default["default"].createElement(react.Heading, { fontSize: "md", d: "flex", alignContent: "space-between", textOverflow: "ellipsis", overflow: "scroll" }, children)),
            React__default["default"].createElement(react.Text, { fontSize: "xs", textOverflow: "ellipsis", overflow: "scroll" }, subtitle)),
        EndIcon && (React__default["default"].createElement(react.Flex, { color: colorScheme + ".600", fontSize: "sm", pos: "absolute", right: 3, top: 0, h: "100%", alignItems: "center" },
            React__default["default"].createElement(EndIcon, null)))));
};

var ThemeIcon = function (props) {
    var theme = useThemeEditor$1().theme;
    var chakraTheme = react.useTheme();
    var colors = props.colors, size = props.size, rest = __rest$5(props, ["colors", "size"]);
    var shadow = react.useColorModeValue('surface', 'surfaceDark');
    var safeB64Bg = react.useColorModeValue(COLOR_PICKER_TRANSPARENT_SAFE_BG_B64[0], COLOR_PICKER_TRANSPARENT_SAFE_BG_B64[1]);
    var iconSize = React.useMemo(function () {
        switch (size) {
            case 'sm':
                return 8;
            case 'lg':
                return 20;
            default:
                return 12;
        }
    }, [size]);
    var iconSpacing = React.useMemo(function () {
        switch (size) {
            case 'sm':
                return 1;
            case 'lg':
                return 3;
            default:
                return 2;
        }
    }, [size]);
    var primaryColor = React.useMemo(function () {
        var _a, _b, _c;
        if ((_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.primary)
            return theme.colors.primary;
        return ((_b = chakraTheme === null || chakraTheme === void 0 ? void 0 : chakraTheme.colors) === null || _b === void 0 ? void 0 : _b.primary) || ((_c = chakraTheme === null || chakraTheme === void 0 ? void 0 : chakraTheme.colors) === null || _c === void 0 ? void 0 : _c.purple);
    }, [chakraTheme, theme]);
    var secondaryColor = React.useMemo(function () {
        var _a, _b, _c;
        if ((_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.secondary)
            return theme.colors.secondary;
        return ((_b = chakraTheme === null || chakraTheme === void 0 ? void 0 : chakraTheme.colors) === null || _b === void 0 ? void 0 : _b.secondary) || ((_c = chakraTheme === null || chakraTheme === void 0 ? void 0 : chakraTheme.colors) === null || _c === void 0 ? void 0 : _c.green);
    }, [chakraTheme, theme]);
    var iconColors = React.useMemo(function () {
        var _a, _b;
        if (colors && colors.length >= 3)
            return colors;
        return [primaryColor, secondaryColor, (_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.gray, (_b = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _b === void 0 ? void 0 : _b.blue];
    }, [theme, colors, primaryColor, secondaryColor]);
    if (!theme) {
        return (React__default["default"].createElement(react.SimpleGrid, __assign$a({ columns: 2, spacing: iconSpacing, boxSize: iconSize, p: iconSpacing, borderRadius: "6px" }, rest),
            React__default["default"].createElement(react.Skeleton, { boxSize: "100%", borderRadius: "full", border: "2px solid" }),
            React__default["default"].createElement(react.Skeleton, { boxSize: "100%", borderRadius: "full", border: "2px solid" }),
            React__default["default"].createElement(react.Skeleton, { boxSize: "100%", borderRadius: "full", border: "2px solid" }),
            React__default["default"].createElement(react.Skeleton, { boxSize: "100%", borderRadius: "full", border: "2px solid" })));
    }
    return (React__default["default"].createElement(react.SimpleGrid, __assign$a({ columns: 2, spacing: iconSpacing, boxSize: iconSize, p: iconSpacing, borderRadius: "6px" }, rest),
        React__default["default"].createElement(react.Box, { shadow: shadow, boxSize: "100%", borderRadius: "full", overflow: "hidden", bgSize: "cover", bgImage: "url(data:image/png;base64," + safeB64Bg + ")" },
            React__default["default"].createElement(react.Box, { boxSize: "100%", bg: iconColors[0][500], border: iconSpacing + "px solid", borderColor: "rgba(220,220,220,0.4)", borderRadius: "full" })),
        React__default["default"].createElement(react.Box, { shadow: shadow, boxSize: "100%", borderRadius: "full", overflow: "hidden", bgSize: "cover", bgImage: "url(data:image/png;base64," + safeB64Bg + ")" },
            React__default["default"].createElement(react.Box, { boxSize: "100%", bg: iconColors[1][500], border: iconSpacing + "px solid", borderColor: "rgba(220,220,220,0.4)", borderRadius: "full" })),
        React__default["default"].createElement(react.Box, { shadow: shadow, boxSize: "100%", borderRadius: "full", overflow: "hidden", bgSize: "cover", bgImage: "url(data:image/png;base64," + safeB64Bg + ")" },
            React__default["default"].createElement(react.Box, { boxSize: "100%", bg: iconColors[2][500], border: iconSpacing + "px solid", borderColor: "rgba(220,220,220,0.4)", borderRadius: "full" })),
        React__default["default"].createElement(react.Box, { shadow: shadow, boxSize: "100%", borderRadius: "full", overflow: "hidden", bgSize: "cover", bgImage: "url(data:image/png;base64," + safeB64Bg + ")" },
            React__default["default"].createElement(react.Box, { boxSize: "100%", bg: iconColors[3][500], border: iconSpacing + "px solid", borderColor: "rgba(220,220,220,0.4)", borderRadius: "full" }))));
};

var ThemeResetPopup = function (_a) {
    var isOpen = _a.isOpen, onReset = _a.onReset, onClose = _a.onClose, rest = __rest$5(_a, ["isOpen", "onReset", "onClose"]);
    var handleReset = React.useCallback(function (id) {
        onReset && onReset();
    }, [onReset]);
    return (React__default["default"].createElement(react.Modal, __assign$a({ isOpen: isOpen, onClose: onClose }, rest),
        React__default["default"].createElement(react.ModalContent, { pos: "absolute", bottom: 0, left: 0, m: 4 },
            React__default["default"].createElement(react.ModalHeader, null, "Reset theme?"),
            React__default["default"].createElement(react.ModalCloseButton, null),
            React__default["default"].createElement(react.ModalBody, null,
                React__default["default"].createElement(react.Text, null, "You are using a modified version of the original theme, woud you like to reset the theme to original one?")),
            React__default["default"].createElement(react.ModalFooter, null,
                React__default["default"].createElement(react.Button, { colorScheme: "blue", mr: 3, onClick: onClose }, "Close"),
                React__default["default"].createElement(react.Button, { variant: "ghost", leftIcon: React__default["default"].createElement(gr.GrPowerReset, null), onClick: handleReset }, "Reset Theme")))));
};

var ThemeEditorConfig = function () {
    var _a, _b, _c;
    var _d = useThemeEditor$1(), theme = _d.theme; _d.setTheme;
    react.useColorMode().colorMode;
    var _e = React.useState((_a = theme === null || theme === void 0 ? void 0 : theme.config) === null || _a === void 0 ? void 0 : _a.initialColorMode), initialColorMode = _e[0], setInitalColorMode = _e[1];
    var toggleInitialColorMode = React.useCallback(function () {
        setInitalColorMode(initialColorMode == 'light' ? 'dark' : 'light');
    }, [initialColorMode]);
    return (React__default["default"].createElement(react.Stack, { spacing: "0.75rem", divider: React__default["default"].createElement(react.Divider, null) },
        React__default["default"].createElement(react.Flex, { alignItems: "center", justifyContent: "space-between" },
            React__default["default"].createElement(react.Text, { fontSize: "0.875rem" }, "Use system color mode"),
            React__default["default"].createElement(react.Switch, { defaultChecked: ((_b = theme === null || theme === void 0 ? void 0 : theme.config) === null || _b === void 0 ? void 0 : _b.useSystemColorMode) || false, size: "lg" })),
        React__default["default"].createElement(react.Flex, { alignItems: "center", justifyContent: "space-between" },
            React__default["default"].createElement(react.Text, { fontSize: "0.875rem" }, "Initial color mode"),
            React__default["default"].createElement(react.Center, null,
                React__default["default"].createElement(react.Tag, { size: "lg" }, initialColorMode),
                React__default["default"].createElement(IconSwitch, { size: "lg", color: initialColorMode == 'light' ? 'yellow.400' : 'yellow.600', bgColor: initialColorMode == 'light' ? 'gray.200' : 'blue.600', d: "flex", isChecked: initialColorMode == 'dark', value: initialColorMode, falseIcon: fa.FaSun, trueIcon: ri.RiMoonClearFill, onChange: toggleInitialColorMode, ml: 3 }))),
        React__default["default"].createElement(react.Flex, { alignItems: "center", justifyContent: "space-between" },
            React__default["default"].createElement(react.Box, null,
                React__default["default"].createElement(react.Text, { fontSize: "0.875rem" }, "CSS var prefix"),
                React__default["default"].createElement(react.Text, { fontSize: "xs", opacity: 0.6 }, "Add a custom prefix for CSS variables")),
            React__default["default"].createElement(react.Center, null,
                React__default["default"].createElement(react.Input, { defaultValue: (_c = theme === null || theme === void 0 ? void 0 : theme.config) === null || _c === void 0 ? void 0 : _c.cssVarPrefix, size: "sm", borderRadius: "md", textAlign: "right", maxW: "150px" })))));
};

var GENERATE_THEME_ENDPOINT = API_ENDPOINT + "/generate-theme";
var ThemeDownloadButton = function (_a) {
    __rest$5(_a, []);
    var _b = React.useState(false), downloading = _b[0], setDownloading = _b[1];
    var theme = useThemeEditor$1().theme;
    var toast = react.useToast();
    var handleDownload = React.useCallback(function (language) { return function () { return __awaiter(void 0, void 0, void 0, function () {
        var result, jsonResult, resultBlob, url, a;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 5, 6, 7]);
                    setDownloading(true);
                    return [4 /*yield*/, fetch(GENERATE_THEME_ENDPOINT, {
                            method: 'POST',
                            headers: {
                                Accept: 'application/json',
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ theme: theme, language: language }),
                        })];
                case 1:
                    result = _a.sent();
                    if (!!result.ok) return [3 /*break*/, 3];
                    return [4 /*yield*/, result.json()];
                case 2:
                    jsonResult = _a.sent();
                    toast({
                        title: 'Error during the download.',
                        description: jsonResult.error,
                        status: 'error',
                        duration: 5000,
                        isClosable: true,
                    });
                    return [2 /*return*/];
                case 3: return [4 /*yield*/, result.blob()];
                case 4:
                    resultBlob = _a.sent();
                    url = window.URL.createObjectURL(resultBlob);
                    a = document.createElement('a');
                    a.href = url;
                    a.download = 'theme.zip';
                    document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox
                    a.click();
                    a.remove();
                    return [3 /*break*/, 7];
                case 5:
                    _a.sent();
                    return [3 /*break*/, 7];
                case 6:
                    setDownloading(false);
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    }); }; }, [theme, toast]);
    return (React__default["default"].createElement(BaseMenu, { hasPortal: false, offset: [0, 10], placement: "top-start", trigger: React__default["default"].createElement(ThemeDownloadMenuButton, null), buttonProps: { w: { base: '100%', md: 'initial' } } },
        React__default["default"].createElement(BaseMenuItem, { colorScheme: "blue", icon: si.SiTypescript, onClick: handleDownload('ts'), isDisabled: downloading, endIcon: fa.FaDownload },
            "Export TypeScript ",
            downloading && React__default["default"].createElement(react.CircularProgress, { isIndeterminate: true })),
        React__default["default"].createElement(react.Divider, null),
        React__default["default"].createElement(BaseMenuItem, { colorScheme: "yellow", icon: si.SiJavascript, onClick: handleDownload('js'), isDisabled: downloading, endIcon: fa.FaDownload },
            "Export JavaScript ",
            downloading && React__default["default"].createElement(react.CircularProgress, { isIndeterminate: true }))));
};
var ThemeDownloadMenuButton = function (_a) {
    var _b = _a.downloading, downloading = _b === void 0 ? false : _b, rest = __rest$5(_a, ["downloading"]);
    return (React__default["default"].createElement(react.Button, __assign$a({ rightIcon: React__default["default"].createElement(fa.FaChevronDown, null), size: "lg", colorScheme: "primary", variant: "solid", isLoading: downloading, disabled: downloading, w: "full" }, rest),
        React__default["default"].createElement(react.Icon, { as: fa.FaDownload, mr: "0.5rem" }),
        " Export"));
};

var ThemeEditorAccordion = function (props) {
    var children = props.children, rest = __rest$5(props, ["children"]);
    var shadow = react.useColorModeValue('surface', 'surfaceDark');
    var bgColor = react.useColorModeValue('white', 'gray.800');
    return (React__default["default"].createElement(react.Accordion, __assign$a({ as: react.Stack, defaultIndex: 0, borderRadius: "md", w: "100%", spacing: "1rem" }, rest), React__default["default"].Children.map(children, function (child, key) {
        return React__default["default"].cloneElement(child, {
            shadow: shadow,
            bgColor: bgColor,
            borderRadius: rest.borderRadius || 'md',
            borderWidth: 0,
            key: key,
            border: 'none',
        });
    })));
};

var ThemeEditorAccordionItem = function (props) {
    var _a = props.title, title = _a === void 0 ? 'Accordion title' : _a, subtitle = props.subtitle, _b = props.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, Icon = props.icon, tag = props.tag, children = props.children, isDisabled = props.isDisabled, _c = props.unmountOnExit, unmountOnExit = _c === void 0 ? true : _c, rest = __rest$5(props, ["title", "subtitle", "colorScheme", "icon", "tag", "children", "isDisabled", "unmountOnExit"]);
    var hoverBgColor = react.useColorModeValue('gray.200', 'gray.700');
    var bgColor = react.useColorModeValue(colorScheme + ".200", colorScheme + ".900");
    return (React__default["default"].createElement(react.AccordionItem, __assign$a({ isDisabled: isDisabled }, rest), function (_a) {
        var isExpanded = _a.isExpanded;
        return (React__default["default"].createElement(React__default["default"].Fragment, null,
            React__default["default"].createElement(react.AccordionButton, { p: { base: 3, sm: 4 }, borderRadius: rest.borderRadius || 'md', _hover: { bgColor: hoverBgColor } },
                Icon && (React__default["default"].createElement(react.Circle, { boxSize: "25px", bgColor: colorScheme + ".200", color: colorScheme + ".600", fontSize: "0.875rem", mr: "0.5rem" },
                    React__default["default"].createElement(Icon, null))),
                React__default["default"].createElement(react.Flex, { direction: "column", textAlign: "left", w: "full" },
                    React__default["default"].createElement(react.Text, { flex: "1", fontWeight: "bold", d: "flex", justifyContent: "space-between" },
                        title,
                        tag && (React__default["default"].createElement(react.Tag, { colorScheme: colorScheme, size: "sm", ml: "0.5rem", bgColor: bgColor, px: "0.25rem" }, tag))),
                    subtitle && React__default["default"].createElement(react.Text, { flex: "1" }, subtitle)),
                !isDisabled ? React__default["default"].createElement(react.AccordionIcon, { ml: "0.5rem" }) : React__default["default"].createElement(react.Icon, { as: fa.FaLock })),
            React__default["default"].createElement(react.Collapse, { in: isExpanded && !isDisabled, unmountOnExit: unmountOnExit },
                React__default["default"].createElement(react.Box, { boxSize: "100%", p: "0.5rem", sx: {
                        ' > *': {
                            w: 'full',
                            px: '0.5rem',
                            py: '0.5rem',
                            borderRadius: 'none',
                        },
                    } }, children))));
    }));
};

var isMobile = function () {
    if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    }
    return false;
};
var useIsMobile = function () {
    var _a = React.useState(false), isMobileState = _a[0], setIsMobile = _a[1];
    React.useEffect(function () {
        setIsMobile(isMobile());
    }, []);
    return isMobileState;
};

var ThemeEditorDrawerHeader = function (_a) {
    var onClose = _a.onClose, initialFocusRef = _a.initialFocusRef;
    var _b = useThemeEditor$1(), canUndo = _b.canUndo, canRedo = _b.canRedo, undo = _b.undo, redo = _b.redo;
    var _c = recoil.useRecoilState(themeEditorState$1), kitThemeState = _c[0], setThemeState = _c[1];
    var shadow = react.useColorModeValue('surface', 'surfaceDark');
    var handleResetTheme = React.useCallback(function () {
        setThemeState(__assign$a(__assign$a({}, kitThemeState), { undoable: [], undone: [], currentTheme: kitThemeState.initialTheme }));
        setThemeTokens$5(kitThemeState.initialTheme);
    }, [kitThemeState, setThemeState]);
    return (React__default["default"].createElement(react.Box, { pos: "relative" },
        React__default["default"].createElement(react.Flex, { py: { base: 2, lg: 3 }, pos: "absolute", right: { base: 3, lg: 6 }, top: { base: 0, lg: 0 }, alignItems: "center", h: "full" },
            React__default["default"].createElement(react.Button, { borderRadius: "6px", boxSize: { base: 12, lg: 14 }, onClick: onClose, fontSize: "1.5rem", p: "0.5rem", ref: initialFocusRef },
                React__default["default"].createElement(md.MdClose, null))),
        React__default["default"].createElement(react.DrawerHeader, { d: "flex", alignItems: "center", backgroundColor: "rgba(0,0,0,0)", pl: { base: 3, lg: 6 }, pr: { base: '75px', lg: '100px' }, py: { base: 2, lg: 3 } },
            React__default["default"].createElement(react.Flex, { alignItems: "center", w: "100%", flex: "1" },
                React__default["default"].createElement(ThemeIcon, { boxSize: { base: 12, lg: 14 }, mr: { base: 2, md: 3 }, shadow: shadow }),
                React__default["default"].createElement(react.Box, null,
                    "Hyper Theme",
                    React__default["default"].createElement(react.Flex, { alignItems: "center" },
                        React__default["default"].createElement(ColorModeToggle, { p: 0, w: "auto", fontSize: "0.875rem", mr: 2 }),
                        React__default["default"].createElement(react.Button, { rightIcon: React__default["default"].createElement(react.Icon, { as: fa.FaRedo }), onClick: handleResetTheme, size: "xs" }, "Reset")))),
            React__default["default"].createElement(react.ButtonGroup, { size: "sm", borderRadius: "md", isAttached: true, overflow: "hidden" },
                React__default["default"].createElement(react.IconButton, { icon: React__default["default"].createElement(ri.RiArrowGoBackFill, null), "aria-label": "undo", disabled: !canUndo, onClick: undo }),
                React__default["default"].createElement(react.Divider, { orientation: "vertical" }),
                React__default["default"].createElement(react.IconButton, { icon: React__default["default"].createElement(ri.RiArrowGoForwardFill, null), "aria-label": "redo", disabled: !canRedo, onClick: redo })))));
};

var ThemeEditorDrawerFooter = function (_a) {
    var onClose = _a.onClose, isMobile = _a.isMobile, _b = _a.actionButton, actionButton = _b === void 0 ? React__default["default"].createElement(ThemeDownloadButton, { borderRadius: "6px", w: { base: '100%', md: 'initial' } }) : _b;
    var bgColor = react.useColorModeValue('whiteAlpha.600', 'rgba(23,25,35,0.8)');
    return (React__default["default"].createElement(react.DrawerFooter, { textAlign: "left", boxShadow: "xl", backgroundColor: bgColor, d: isMobile ? 'none' : 'flex', px: { base: 3, lg: 6 }, py: { base: 2, lg: 3 } },
        React__default["default"].createElement(react.Button, { size: "md", onClick: onClose, variant: "ghost", mr: "1rem", borderRadius: "6px", d: { base: 'none', md: 'flex' } }, "Cancel"),
        actionButton));
};

var CreditsBox = function (_a) {
    _a.icon; var _c = _a.title, title = _c === void 0 ? 'is made with 💖 by ' : _c, _d = _a.company, company = _d === void 0 ? 'Hyperting' : _d, _e = _a.product, product = _e === void 0 ? 'HyperTheme' : _e, children = _a.children, rest = __rest$5(_a, ["icon", "title", "company", "product", "children"]);
    var bgColor = react.useColorModeValue('white', 'gray.900');
    return (React__default["default"].createElement(react.Stack, __assign$a({ bgColor: bgColor, alignItems: "center", justifyContent: "center", borderRadius: "md", textAlign: "center", w: "100%", py: 3, opacity: "0.5", fontSize: "sm", spacing: 1 }, rest),
        React__default["default"].createElement(react.Text, null,
            React__default["default"].createElement(react.Link, { href: "https://hyperthe.me", textDecor: "underline", isExternal: true, mr: 1 }, product),
            title,
            React__default["default"].createElement(react.Link, { href: "https://hyperting.com", textDecor: "underline", isExternal: true }, company)),
        children && React__default["default"].createElement(react.Flex, { alignItems: "center" }, children)));
};

var UpgradeBanner = function (_a) {
    var _b = _a.icon, IconComp = _b === void 0 ? fa.FaUserTie : _b, _c = _a.title, title = _c === void 0 ? 'Unlock Pro features' : _c, _d = _a.subtitle, subtitle = _d === void 0 ? 'Learn more' : _d, _e = _a.colorScheme, colorScheme = _e === void 0 ? 'primary' : _e; _a.children; var rest = __rest$5(_a, ["icon", "title", "subtitle", "colorScheme", "children"]);
    var bgColor = react.useColorModeValue('white', 'gray.800');
    var shadow = react.useColorModeValue('surface', 'surfaceDark');
    return (React__default["default"].createElement(react.Stack, __assign$a({ direction: { base: 'row', sm: 'row' }, bgColor: bgColor, shadow: shadow, alignItems: "center", textAlign: "left", w: "100%", p: { base: 3, md: 4 }, fontSize: "sm", spacing: { base: 2, lg: 2 } }, rest, { borderRadius: "md" }),
        React__default["default"].createElement(react.Flex, { direction: { base: 'row' }, w: "100%", alignItems: "center" },
            React__default["default"].createElement(react.Flex, { bgColor: colorScheme ? colorScheme + ".300" : '', borderColor: colorScheme + ".300", borderRadius: "full", boxSize: { base: '25px' }, alignItems: "center", justifyContent: "center", mr: 3, d: { base: 'none', sm: 'flex' } },
                React__default["default"].createElement(react.Box, { as: IconComp, fontSize: { base: 'md', md: 'md' }, color: colorScheme + ".500" })),
            React__default["default"].createElement(react.Box, null,
                React__default["default"].createElement(react.Heading, { fontSize: "md", color: "primary.400" }, title),
                React__default["default"].createElement(react.Link, { w: "100%", flex: "1", opacity: "0.8", isExternal: true, href: "https://www.hyperthe.me" }, subtitle && React__default["default"].createElement(react.Text, { fontSize: "sm" }, subtitle)))),
        React__default["default"].createElement(react.Link, { href: "https://hyperting.gumroad.com/l/hypertheme-editor", isExternal: true, _hover: { textDecor: 'none' } },
            React__default["default"].createElement(react.Button, { size: "sm", colorScheme: "primary", rightIcon: React__default["default"].createElement(fa.FaLockOpen, null) }, "Upgrade"))));
};

function isSafariBrowser() {
    var is_chrome = navigator.userAgent.indexOf('Chrome') > -1;
    var is_safari = navigator.userAgent.indexOf('Safari') > -1;
    if (is_safari) {
        if (is_chrome)
            // Chrome seems to have both Chrome and Safari userAgents
            return false;
        else
            return true;
    }
    return false;
}
var isBrowserCompatible = function () {
    // Firefox 1.0+
    // eslint-disable-next-line @typescript-eslint/dot-notation
    var isFirefox = typeof window['InstallTrigger'] !== 'undefined';
    // Safari 3.0+ "[object HTMLElementConstructor]"
    var isSafari = isSafariBrowser();
    // Internet Explorer 6-11
    var isIE = /* @cc_on!@ */ !!document.documentMode;
    if (isFirefox || isSafari || isIE) {
        return false;
    }
    return true;
};
var useIsBrowserCompatible = function () {
    var _a = React.useState(true), isCompatible = _a[0], setIsCompatible = _a[1];
    React.useEffect(function () {
        setIsCompatible(isBrowserCompatible());
    }, []);
    return isCompatible;
};

var ThemeEditorRootPanel = function () {
    return null;
};

// import { DRAWER_EXPANDED_INDEX_LOCAL_STORAGE_KEY } from '../../constants'
var mobileReadyItems = ['Colors'];
var ThemeEditorDrawer = function (_a) {
    var hideUpgradeToPro = _a.hideUpgradeToPro, hideCredits = _a.hideCredits, onClose = _a.onClose, isOpen = _a.isOpen, children = _a.children, _b = _a.headerComponent, headerComponent = _b === void 0 ? React__default["default"].createElement(ThemeEditorDrawerHeader, null) : _b, _c = _a.footerComponent, footerComponent = _c === void 0 ? React__default["default"].createElement(ThemeEditorDrawerFooter, null) : _c, rest = __rest$5(_a, ["hideUpgradeToPro", "hideCredits", "onClose", "isOpen", "children", "headerComponent", "footerComponent"]);
    var bgColor = react.useColorModeValue('white', 'rgba(23,25,35,1)');
    var btnRef = React.useRef();
    var initialFocusRef = React.useRef();
    var isMobile = useIsMobile();
    var isCompatible = useIsBrowserCompatible();
    // const storedIndex = localStorage.getItem(DRAWER_EXPANDED_INDEX_LOCAL_STORAGE_KEY)
    // const defaultIndex = storedIndex && parseInt(storedIndex) >= 0 ? parseInt(storedIndex) : 0
    // const handleOnChangeIndex = (expandedIndex) => {
    //   localStorage.setItem(
    //     DRAWER_EXPANDED_INDEX_LOCAL_STORAGE_KEY,
    //     expandedIndex >= 0 ? expandedIndex : 0
    //   )
    //   console.log(expandedIndex)
    // }
    return (React__default["default"].createElement(react.Drawer, __assign$a({ placement: "right", finalFocusRef: btnRef, 
        // initialFocusRef={initialFocusRef}
        size: "md", blockScrollOnMount: false, onClose: onClose, isOpen: isOpen }, rest),
        React__default["default"].createElement(react.DrawerContent, { bgColor: { md: bgColor }, shadow: "md", fontFamily: "Sora, sans-serif", lineHeight: "1.5", zIndex: "modal" },
            React__default["default"].isValidElement(headerComponent) &&
                React__default["default"].cloneElement(headerComponent, {
                    onClose: onClose,
                    initialFocusRef: initialFocusRef,
                }),
            React__default["default"].createElement(react.DrawerBody, { bgColor: "rgba(0,0,0,0)", px: { base: 3, lg: 6 }, py: 3, pos: "relative", overflowX: "hidden" },
                !isCompatible && (React__default["default"].createElement(react.Alert, { status: "error", mb: 4, borderRadius: "md" },
                    React__default["default"].createElement(react.AlertIcon, null),
                    "This browser is not compatible, most of the features will not work.")),
                React__default["default"].createElement(ThemeEditorAccordion, { allowToggle: true, borderRadius: "md", defaultIndex: 0 }, React__default["default"].Children.map(React__default["default"].Children.toArray(children), function (child, index) {
                    var _a = child.props, icon = _a.icon, title = _a.title, children = _a.children, panelProps = __rest$5(_a, ["icon", "title", "children"]);
                    return (React__default["default"].createElement(ThemeEditorAccordionItem, { key: "theme-editor-item-" + index, icon: icon, title: title, fontSize: "lg", unmountOnExit: true, isDisabled: isMobile && mobileReadyItems.indexOf(title) == -1 }, child.type === ThemeEditorRootPanel
                        ? children
                        : React__default["default"].cloneElement(child, __assign$a({}, panelProps), children)));
                })),
                !hideUpgradeToPro && React__default["default"].createElement(UpgradeBanner, { mt: { base: 3, md: 4 } }),
                !hideCredits && React__default["default"].createElement(CreditsBox, { mt: { base: 3, md: 4 } })),
            React__default["default"].isValidElement(footerComponent) &&
                React__default["default"].cloneElement(footerComponent, {
                    onClose: onClose,
                    isMobile: isMobile,
                }))));
};

var ThemeEditorButton = function (_a) {
    var label = _a.label, size = _a.size, onOpen = _a.onOpen; _a.isOpen; var rest = __rest$5(_a, ["label", "size", "onOpen", "isOpen"]);
    var themeIconSize = React.useMemo(function () { return (typeof size === 'undefined' ? undefined : size !== 'xs' ? size : 'sm'); }, [size]);
    return (React__default["default"].createElement(react.Button, __assign$a({ onClick: onOpen, variant: "solid", p: "0.25rem", size: size }, rest),
        label && (React__default["default"].createElement(React__default["default"].Fragment, null,
            React__default["default"].createElement(react.Text, { ml: 2, fontWeight: "inherit" }, label),
            React__default["default"].createElement(react.Divider, { orientation: "vertical", my: 2, maxH: "50%", ml: 2 }))),
        React__default["default"].createElement(ThemeIcon, { boxShadow: "none", bgColor: "transparent", size: themeIconSize })));
};

var ThemeEditor = function (_a) {
    var children = _a.children, disclosureProps = __rest$5(_a, ["children"]);
    var _b = react.useDisclosure(disclosureProps), isOpen = _b.isOpen, onOpen = _b.onOpen, onClose = _b.onClose;
    return (React__default["default"].createElement(react.ThemeProvider, { theme: theme }, React__default["default"].Children.map(React__default["default"].Children.toArray(children), function (child, index) {
        return React__default["default"].cloneElement(child, {
            isOpen: isOpen,
            onOpen: onOpen,
            onClose: onClose,
        });
    })));
};

var ThemeStateInitializer = function (_a) {
    var theme = _a.theme;
    var _b = recoil.useRecoilState(themeEditorState$1), themeState = _b[0], setThemeState = _b[1];
    React.useEffect(function () {
        if (!themeState.currentTheme && !themeState.initialTheme) {
            var localStorageValue = localStorage.getItem(THEME_STATE_LOCAL_STORAGE_KEY$5);
            if (localStorageValue) {
                var parsedValue = safeJsonParse$1(localStorageValue);
                if (!parsedValue.error && parsedValue.value) {
                    var currentTheme = parsedValue.value.currentTheme && Object.keys(parsedValue.value.currentTheme).length > 0
                        ? parsedValue.value.currentTheme
                        : theme;
                    setThemeState(__assign$a(__assign$a({}, parsedValue.value), { undoable: parsedValue.value.undoable || [], undone: parsedValue.value.undone || [], initialTheme: theme, currentTheme: currentTheme }));
                    setThemeTokens$5(currentTheme);
                    return;
                }
            }
            setThemeState(__assign$a(__assign$a({}, themeState), { undoable: themeState.undoable || [], undone: themeState.undone || [], currentTheme: themeState.currentTheme && Object.keys(themeState.currentTheme).length > 0
                    ? themeState.currentTheme
                    : theme, initialTheme: theme }));
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    return null;
};

var build$4 = {};

var propTypes$4 = {exports: {}};

var reactIs$4 = {exports: {}};

var reactIs_production_min$4 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$4="function"===typeof Symbol&&Symbol.for,c$4=b$4?Symbol.for("react.element"):60103,d$4=b$4?Symbol.for("react.portal"):60106,e$4=b$4?Symbol.for("react.fragment"):60107,f$4=b$4?Symbol.for("react.strict_mode"):60108,g$4=b$4?Symbol.for("react.profiler"):60114,h$4=b$4?Symbol.for("react.provider"):60109,k$4=b$4?Symbol.for("react.context"):60110,l$4=b$4?Symbol.for("react.async_mode"):60111,m$4=b$4?Symbol.for("react.concurrent_mode"):60111,n$4=b$4?Symbol.for("react.forward_ref"):60112,p$4=b$4?Symbol.for("react.suspense"):60113,q$4=b$4?
Symbol.for("react.suspense_list"):60120,r$4=b$4?Symbol.for("react.memo"):60115,t$4=b$4?Symbol.for("react.lazy"):60116,v$4=b$4?Symbol.for("react.block"):60121,w$4=b$4?Symbol.for("react.fundamental"):60117,x$4=b$4?Symbol.for("react.responder"):60118,y$4=b$4?Symbol.for("react.scope"):60119;
function z$4(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$4:switch(a=a.type,a){case l$4:case m$4:case e$4:case g$4:case f$4:case p$4:return a;default:switch(a=a&&a.$$typeof,a){case k$4:case n$4:case t$4:case r$4:case h$4:return a;default:return u}}case d$4:return u}}}function A$4(a){return z$4(a)===m$4}reactIs_production_min$4.AsyncMode=l$4;reactIs_production_min$4.ConcurrentMode=m$4;reactIs_production_min$4.ContextConsumer=k$4;reactIs_production_min$4.ContextProvider=h$4;reactIs_production_min$4.Element=c$4;reactIs_production_min$4.ForwardRef=n$4;reactIs_production_min$4.Fragment=e$4;reactIs_production_min$4.Lazy=t$4;reactIs_production_min$4.Memo=r$4;reactIs_production_min$4.Portal=d$4;
reactIs_production_min$4.Profiler=g$4;reactIs_production_min$4.StrictMode=f$4;reactIs_production_min$4.Suspense=p$4;reactIs_production_min$4.isAsyncMode=function(a){return A$4(a)||z$4(a)===l$4};reactIs_production_min$4.isConcurrentMode=A$4;reactIs_production_min$4.isContextConsumer=function(a){return z$4(a)===k$4};reactIs_production_min$4.isContextProvider=function(a){return z$4(a)===h$4};reactIs_production_min$4.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c$4};reactIs_production_min$4.isForwardRef=function(a){return z$4(a)===n$4};reactIs_production_min$4.isFragment=function(a){return z$4(a)===e$4};reactIs_production_min$4.isLazy=function(a){return z$4(a)===t$4};
reactIs_production_min$4.isMemo=function(a){return z$4(a)===r$4};reactIs_production_min$4.isPortal=function(a){return z$4(a)===d$4};reactIs_production_min$4.isProfiler=function(a){return z$4(a)===g$4};reactIs_production_min$4.isStrictMode=function(a){return z$4(a)===f$4};reactIs_production_min$4.isSuspense=function(a){return z$4(a)===p$4};
reactIs_production_min$4.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e$4||a===m$4||a===g$4||a===f$4||a===p$4||a===q$4||"object"===typeof a&&null!==a&&(a.$$typeof===t$4||a.$$typeof===r$4||a.$$typeof===h$4||a.$$typeof===k$4||a.$$typeof===n$4||a.$$typeof===w$4||a.$$typeof===x$4||a.$$typeof===y$4||a.$$typeof===v$4)};reactIs_production_min$4.typeOf=z$4;

var reactIs_development$4 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development$4.AsyncMode = AsyncMode;
reactIs_development$4.ConcurrentMode = ConcurrentMode;
reactIs_development$4.ContextConsumer = ContextConsumer;
reactIs_development$4.ContextProvider = ContextProvider;
reactIs_development$4.Element = Element;
reactIs_development$4.ForwardRef = ForwardRef;
reactIs_development$4.Fragment = Fragment;
reactIs_development$4.Lazy = Lazy;
reactIs_development$4.Memo = Memo;
reactIs_development$4.Portal = Portal;
reactIs_development$4.Profiler = Profiler;
reactIs_development$4.StrictMode = StrictMode;
reactIs_development$4.Suspense = Suspense;
reactIs_development$4.isAsyncMode = isAsyncMode;
reactIs_development$4.isConcurrentMode = isConcurrentMode;
reactIs_development$4.isContextConsumer = isContextConsumer;
reactIs_development$4.isContextProvider = isContextProvider;
reactIs_development$4.isElement = isElement;
reactIs_development$4.isForwardRef = isForwardRef;
reactIs_development$4.isFragment = isFragment;
reactIs_development$4.isLazy = isLazy;
reactIs_development$4.isMemo = isMemo;
reactIs_development$4.isPortal = isPortal;
reactIs_development$4.isProfiler = isProfiler;
reactIs_development$4.isStrictMode = isStrictMode;
reactIs_development$4.isSuspense = isSuspense;
reactIs_development$4.isValidElementType = isValidElementType;
reactIs_development$4.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs$4.exports = reactIs_production_min$4;
} else {
  reactIs$4.exports = reactIs_development$4;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols$4 = Object.getOwnPropertySymbols;
var hasOwnProperty$4 = Object.prototype.hasOwnProperty;
var propIsEnumerable$4 = Object.prototype.propertyIsEnumerable;

function toObject$4(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative$4() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$4 = shouldUseNative$4() ? Object.assign : function (target, source) {
	var from;
	var to = toObject$4(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$4.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols$4) {
			symbols = getOwnPropertySymbols$4(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$4.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$j = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1$4 = ReactPropTypesSecret$j;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$9 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$i = ReactPropTypesSecret_1$4;
  var loggedTypeFailures$4 = {};
  var has$9 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$9 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$9(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$9(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$i);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$9(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures$4)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures$4[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$9(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$9.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures$4 = {};
  }
};

var checkPropTypes_1$4 = checkPropTypes$9;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$9 = reactIs$4.exports;
var assign$4 = objectAssign$4;

var ReactPropTypesSecret$h = ReactPropTypesSecret_1$4;
var checkPropTypes$8 = checkPropTypes_1$4;

var has$8 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$8 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$8 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull$4() {
  return null;
}

var factoryWithTypeCheckers$4 = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$h) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$8(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull$4);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$h);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$9.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$8(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$8('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull$4;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$8(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$h);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$8('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull$4;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$8(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull$4;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$h) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$h);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign$4({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$h);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes$8;
  ReactPropTypes.resetWarningCache = checkPropTypes$8.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$g = ReactPropTypesSecret_1$4;

function emptyFunction$4() {}
function emptyFunctionWithReset$4() {}
emptyFunctionWithReset$4.resetWarningCache = emptyFunction$4;

var factoryWithThrowingShims$4 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret$g) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset$4,
    resetWarningCache: emptyFunction$4
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs$8 = reactIs$4.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess$4 = true;
  propTypes$4.exports = factoryWithTypeCheckers$4(ReactIs$8.isElement, throwOnDirectAccess$4);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes$4.exports = factoryWithThrowingShims$4();
}

Object.defineProperty(build$4, "__esModule", {
    value: true
});

var _slicedToArray$4 = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react$4 = React__default["default"];

var _propTypes$4 = propTypes$4.exports;

var _propTypes2$4 = _interopRequireDefault$4(_propTypes$4);

function _interopRequireDefault$4(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray$4(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var createLink$4 = function createLink(fonts, subsets, display) {
    var families = fonts.reduce(function (acc, font) {
        var family = font.font.replace(/ +/g, '+');
        var weights = (font.weights || []).join(',');

        return [].concat(_toConsumableArray$4(acc), [family + (weights && ':' + weights)]);
    }, []).join('|');

    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://fonts.googleapis.com/css?family=' + families;

    if (subsets && Array.isArray(subsets) && subsets.length > 0) {
        link.href += '&subset=' + subsets.join(',');
    }

    if (display) {
        link.href += '&display=' + display;
    }

    return link;
};

var GoogleFontLoader$4 = function GoogleFontLoader(_ref) {
    var fonts = _ref.fonts,
        subsets = _ref.subsets,
        _ref$display = _ref.display,
        display = _ref$display === undefined ? null : _ref$display;

    var _useState = (0, _react$4.useState)(createLink$4(fonts, subsets, display)),
        _useState2 = _slicedToArray$4(_useState, 2),
        link = _useState2[0],
        setLink = _useState2[1];

    (0, _react$4.useEffect)(function () {
        document.head.appendChild(link);

        return function () {
            return document.head.removeChild(link);
        };
    }, [link]);

    (0, _react$4.useEffect)(function () {
        setLink(createLink$4(fonts, subsets, display));
    }, [fonts, subsets, display]);

    return null;
};

GoogleFontLoader$4.propTypes = {
    fonts: _propTypes2$4.default.arrayOf(_propTypes2$4.default.shape({
        font: _propTypes2$4.default.string.isRequired,
        weights: _propTypes2$4.default.arrayOf(_propTypes2$4.default.oneOfType([_propTypes2$4.default.string, _propTypes2$4.default.number]))
    })).isRequired,
    subsets: _propTypes2$4.default.arrayOf(_propTypes2$4.default.string),
    display: _propTypes2$4.default.string
};

var _default = build$4.default = GoogleFontLoader$4;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$9 = function() {
    __assign$9 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$9.apply(this, arguments);
};

function mode$4(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid$4 = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode$4('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode$4('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode$4('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode$4(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode$4(color, 'gray.800')(props),
        _hover: {
            bg: mode$4(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode$4(activeBg, c + ".400")(props) },
    };
};

var components$4 = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$4('primary.500', 'primary.200')(props),
                    borderColor: mode$4('primary.500', 'primary.200')(props),
                    color: mode$4('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$4('v.600', 'primary.300')(props),
                        borderColor: mode$4('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$4('gray.200', 'transparent')(props),
                        bg: mode$4('gray.200', 'whiteAlpha.300')(props),
                        color: mode$4('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$4('primary.500', 'primary.200')(props),
                    borderColor: mode$4('primary.500', 'primary.200')(props),
                    color: mode$4('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$4('v.600', 'primary.300')(props),
                        borderColor: mode$4('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$4('gray.200', 'transparent')(props),
                        bg: mode$4('gray.200', 'whiteAlpha.300')(props),
                        color: mode$4('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode$4('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode$4('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode$4('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid$4,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode$4('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode$4('1px', '1px')(props),
                    borderColor: mode$4('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode$4('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode$4('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode$4('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode$4(c + ".600", c + ".300")(props),
                            borderRightColor: mode$4('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode$4('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode$4('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config$4 = {
    useSystemColorMode: false,
};

var fonts$4 = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors$4 = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles$4 = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode$4('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes$4 = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows$4 = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii$4 = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme$4 = {
    config: config$4,
    styles: styles$4,
    fonts: fonts$4,
    colors: colors$4,
    sizes: sizes$4,
    shadows: shadows$4,
    radii: radii$4,
    components: components$4,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
react.extendTheme(__assign$9(__assign$9({}, customTheme$4), { config: __assign$9(__assign$9({}, customTheme$4.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$8 = function() {
    __assign$8 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$8.apply(this, arguments);
};

function __rest$4(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}

// theme.colors
var setThemeSingleColor$4 = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor$4 = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette$4 = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor$4(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors$4 = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor$4(token, colors[token]);
        }
        else {
            setThemeColorPalette$4(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont$4 = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts$4 = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont$4(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes$4 = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize$4(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings$4 = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing$4(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights$4 = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight$4(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows$4 = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow$4(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings$4 = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing$4(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius$4 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses$4 = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius$4(size, radii[size]);
    }
};
var setThemeTokens$4 = function (theme) {
    setThemeColors$4(theme.colors);
    setThemeTypograghyFontSizes$4(theme.fontSizes);
    setThemeTypographyFonts$4(theme.fonts);
    setThemeTypographyLetterSpacings$4(theme.letterSpacings);
    setThemeTypographyLineHeights$4(theme.lineHeights);
    setThemeShadows$4(theme.shadows);
    setThemeBorderRadiuses$4(theme.radii);
    setThemeSpacings$4(theme.space);
};
var THEME_STATE_LOCAL_STORAGE_KEY$4 = 'hypertheme-edit-state';
var GOOGLE_FONTS_LOCAL_STORAGE_KEY$3 = 'hypertheme-google-fonts-state';

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
var themeEditorState = recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY$4, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens$4(newValue.currentTheme);
                }
            });
        },
    ],
});
/**
 * An hook to manage the current ThemeEditorState
 *
 * @returns an object with the curent ThemeEditorState and history actions: {@link useThemeEditorReturn}
 */
var useThemeEditor = function () {
    var _a = recoil.useRecoilState(themeEditorState), _b = _a[0], currentTheme = _b.currentTheme, undone = _b.undone, undoable = _b.undoable, initialTheme = _b.initialTheme, setThemeState = _a[1];
    var setTheme = React.useCallback(function (theme) {
        var newPatches = [];
        var newInversePatches = [];
        var newTheme = produce__default["default"](currentTheme, function (draft) {
            if (!theme) {
                return produce.nothing;
            }
            else {
                return theme;
            }
        }, function (patches, inversePatches) {
            newPatches = patches;
            newInversePatches = inversePatches;
        });
        var newUndoable = __spreadArray([], undoable, true);
        if (newUndoable.length >= 10) {
            newUndoable.pop();
        }
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undoable: __spreadArray([{ patches: newPatches, inversePatches: newInversePatches }], newUndoable, true),
            undone: [],
        });
    }, [currentTheme, initialTheme, setThemeState, undoable]);
    var undo = React.useCallback(function () {
        var lastPatches = undoable[0];
        var newUndone = __spreadArray([lastPatches], undone, true);
        var newUndoable = undoable.slice(1);
        var newTheme = produce.applyPatches(currentTheme, lastPatches.inversePatches);
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undone: newUndone,
            undoable: newUndoable,
        });
    }, [currentTheme, initialTheme, setThemeState, undoable, undone]);
    var redo = React.useCallback(function () {
        var nextPatches = undone[0];
        var newUndoable = __spreadArray([nextPatches], undoable, true);
        var newUndone = undone.slice(1);
        var newTheme = produce.applyPatches(currentTheme, nextPatches.patches);
        setThemeState({
            initialTheme: initialTheme,
            currentTheme: newTheme,
            undone: newUndone,
            undoable: newUndoable,
        });
    }, [currentTheme, initialTheme, setThemeState, undoable, undone]);
    return {
        initialTheme: initialTheme,
        theme: currentTheme,
        setTheme: setTheme,
        canUndo: undoable.length > 0,
        undo: undo,
        canRedo: undone.length > 0,
        redo: redo,
    };
};

recoil.atom({
    key: 'googleFontFamiliesState',
    default: {
        initialized: false,
        toLoadFonts: [],
        fonts: [],
        fontFamilies: [],
        toLoadVariants: {},
    },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else if (newValue.initialized) {
                    localStorage.setItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY$3, JSON.stringify({
                        toLoadFonts: newValue.toLoadFonts,
                        toLoadVariants: newValue.toLoadVariants,
                    }));
                }
            });
        },
    ],
});

var safeJsonParse = function (text) {
    try {
        return {
            value: JSON.parse(text),
        };
    }
    catch (ex) {
        return {
            error: ex,
        };
    }
};

var cx$4 = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr$4 = function (condition) {
    return (condition ? '' : undefined);
};
react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest$4(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest$4(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign$8({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign$8(__assign$8({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign$8({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign$8({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign$8({}, getRootProps(), { className: cx$4('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign$8({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign$8({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr$4(state.isChecked), "data-hover": dataAttr$4(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign$8({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var build$3 = {};

var propTypes$3 = {exports: {}};

var reactIs$3 = {exports: {}};

var reactIs_production_min$3 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$3="function"===typeof Symbol&&Symbol.for,c$3=b$3?Symbol.for("react.element"):60103,d$3=b$3?Symbol.for("react.portal"):60106,e$3=b$3?Symbol.for("react.fragment"):60107,f$3=b$3?Symbol.for("react.strict_mode"):60108,g$3=b$3?Symbol.for("react.profiler"):60114,h$3=b$3?Symbol.for("react.provider"):60109,k$3=b$3?Symbol.for("react.context"):60110,l$3=b$3?Symbol.for("react.async_mode"):60111,m$3=b$3?Symbol.for("react.concurrent_mode"):60111,n$3=b$3?Symbol.for("react.forward_ref"):60112,p$3=b$3?Symbol.for("react.suspense"):60113,q$3=b$3?
Symbol.for("react.suspense_list"):60120,r$3=b$3?Symbol.for("react.memo"):60115,t$3=b$3?Symbol.for("react.lazy"):60116,v$3=b$3?Symbol.for("react.block"):60121,w$3=b$3?Symbol.for("react.fundamental"):60117,x$3=b$3?Symbol.for("react.responder"):60118,y$3=b$3?Symbol.for("react.scope"):60119;
function z$3(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$3:switch(a=a.type,a){case l$3:case m$3:case e$3:case g$3:case f$3:case p$3:return a;default:switch(a=a&&a.$$typeof,a){case k$3:case n$3:case t$3:case r$3:case h$3:return a;default:return u}}case d$3:return u}}}function A$3(a){return z$3(a)===m$3}reactIs_production_min$3.AsyncMode=l$3;reactIs_production_min$3.ConcurrentMode=m$3;reactIs_production_min$3.ContextConsumer=k$3;reactIs_production_min$3.ContextProvider=h$3;reactIs_production_min$3.Element=c$3;reactIs_production_min$3.ForwardRef=n$3;reactIs_production_min$3.Fragment=e$3;reactIs_production_min$3.Lazy=t$3;reactIs_production_min$3.Memo=r$3;reactIs_production_min$3.Portal=d$3;
reactIs_production_min$3.Profiler=g$3;reactIs_production_min$3.StrictMode=f$3;reactIs_production_min$3.Suspense=p$3;reactIs_production_min$3.isAsyncMode=function(a){return A$3(a)||z$3(a)===l$3};reactIs_production_min$3.isConcurrentMode=A$3;reactIs_production_min$3.isContextConsumer=function(a){return z$3(a)===k$3};reactIs_production_min$3.isContextProvider=function(a){return z$3(a)===h$3};reactIs_production_min$3.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c$3};reactIs_production_min$3.isForwardRef=function(a){return z$3(a)===n$3};reactIs_production_min$3.isFragment=function(a){return z$3(a)===e$3};reactIs_production_min$3.isLazy=function(a){return z$3(a)===t$3};
reactIs_production_min$3.isMemo=function(a){return z$3(a)===r$3};reactIs_production_min$3.isPortal=function(a){return z$3(a)===d$3};reactIs_production_min$3.isProfiler=function(a){return z$3(a)===g$3};reactIs_production_min$3.isStrictMode=function(a){return z$3(a)===f$3};reactIs_production_min$3.isSuspense=function(a){return z$3(a)===p$3};
reactIs_production_min$3.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e$3||a===m$3||a===g$3||a===f$3||a===p$3||a===q$3||"object"===typeof a&&null!==a&&(a.$$typeof===t$3||a.$$typeof===r$3||a.$$typeof===h$3||a.$$typeof===k$3||a.$$typeof===n$3||a.$$typeof===w$3||a.$$typeof===x$3||a.$$typeof===y$3||a.$$typeof===v$3)};reactIs_production_min$3.typeOf=z$3;

var reactIs_development$3 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development$3.AsyncMode = AsyncMode;
reactIs_development$3.ConcurrentMode = ConcurrentMode;
reactIs_development$3.ContextConsumer = ContextConsumer;
reactIs_development$3.ContextProvider = ContextProvider;
reactIs_development$3.Element = Element;
reactIs_development$3.ForwardRef = ForwardRef;
reactIs_development$3.Fragment = Fragment;
reactIs_development$3.Lazy = Lazy;
reactIs_development$3.Memo = Memo;
reactIs_development$3.Portal = Portal;
reactIs_development$3.Profiler = Profiler;
reactIs_development$3.StrictMode = StrictMode;
reactIs_development$3.Suspense = Suspense;
reactIs_development$3.isAsyncMode = isAsyncMode;
reactIs_development$3.isConcurrentMode = isConcurrentMode;
reactIs_development$3.isContextConsumer = isContextConsumer;
reactIs_development$3.isContextProvider = isContextProvider;
reactIs_development$3.isElement = isElement;
reactIs_development$3.isForwardRef = isForwardRef;
reactIs_development$3.isFragment = isFragment;
reactIs_development$3.isLazy = isLazy;
reactIs_development$3.isMemo = isMemo;
reactIs_development$3.isPortal = isPortal;
reactIs_development$3.isProfiler = isProfiler;
reactIs_development$3.isStrictMode = isStrictMode;
reactIs_development$3.isSuspense = isSuspense;
reactIs_development$3.isValidElementType = isValidElementType;
reactIs_development$3.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs$3.exports = reactIs_production_min$3;
} else {
  reactIs$3.exports = reactIs_development$3;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols$3 = Object.getOwnPropertySymbols;
var hasOwnProperty$3 = Object.prototype.hasOwnProperty;
var propIsEnumerable$3 = Object.prototype.propertyIsEnumerable;

function toObject$3(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative$3() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$3 = shouldUseNative$3() ? Object.assign : function (target, source) {
	var from;
	var to = toObject$3(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$3.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols$3) {
			symbols = getOwnPropertySymbols$3(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$3.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$f = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1$3 = ReactPropTypesSecret$f;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$7 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$e = ReactPropTypesSecret_1$3;
  var loggedTypeFailures$3 = {};
  var has$7 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$7 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$7(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$7(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$e);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$7(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures$3)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures$3[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$7(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$7.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures$3 = {};
  }
};

var checkPropTypes_1$3 = checkPropTypes$7;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$7 = reactIs$3.exports;
var assign$3 = objectAssign$3;

var ReactPropTypesSecret$d = ReactPropTypesSecret_1$3;
var checkPropTypes$6 = checkPropTypes_1$3;

var has$6 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$6 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$6 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull$3() {
  return null;
}

var factoryWithTypeCheckers$3 = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$d) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$6(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull$3);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$d);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$7.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$6(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$6('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull$3;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$6(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$d);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$6('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull$3;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$6(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull$3;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$d) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$d);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign$3({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$d);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes$6;
  ReactPropTypes.resetWarningCache = checkPropTypes$6.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$c = ReactPropTypesSecret_1$3;

function emptyFunction$3() {}
function emptyFunctionWithReset$3() {}
emptyFunctionWithReset$3.resetWarningCache = emptyFunction$3;

var factoryWithThrowingShims$3 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret$c) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset$3,
    resetWarningCache: emptyFunction$3
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs$6 = reactIs$3.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess$3 = true;
  propTypes$3.exports = factoryWithTypeCheckers$3(ReactIs$6.isElement, throwOnDirectAccess$3);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes$3.exports = factoryWithThrowingShims$3();
}

Object.defineProperty(build$3, "__esModule", {
    value: true
});

var _slicedToArray$3 = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react$3 = React__default["default"];

var _propTypes$3 = propTypes$3.exports;

var _propTypes2$3 = _interopRequireDefault$3(_propTypes$3);

function _interopRequireDefault$3(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray$3(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var createLink$3 = function createLink(fonts, subsets, display) {
    var families = fonts.reduce(function (acc, font) {
        var family = font.font.replace(/ +/g, '+');
        var weights = (font.weights || []).join(',');

        return [].concat(_toConsumableArray$3(acc), [family + (weights && ':' + weights)]);
    }, []).join('|');

    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://fonts.googleapis.com/css?family=' + families;

    if (subsets && Array.isArray(subsets) && subsets.length > 0) {
        link.href += '&subset=' + subsets.join(',');
    }

    if (display) {
        link.href += '&display=' + display;
    }

    return link;
};

var GoogleFontLoader$3 = function GoogleFontLoader(_ref) {
    var fonts = _ref.fonts,
        subsets = _ref.subsets,
        _ref$display = _ref.display,
        display = _ref$display === undefined ? null : _ref$display;

    var _useState = (0, _react$3.useState)(createLink$3(fonts, subsets, display)),
        _useState2 = _slicedToArray$3(_useState, 2),
        link = _useState2[0],
        setLink = _useState2[1];

    (0, _react$3.useEffect)(function () {
        document.head.appendChild(link);

        return function () {
            return document.head.removeChild(link);
        };
    }, [link]);

    (0, _react$3.useEffect)(function () {
        setLink(createLink$3(fonts, subsets, display));
    }, [fonts, subsets, display]);

    return null;
};

GoogleFontLoader$3.propTypes = {
    fonts: _propTypes2$3.default.arrayOf(_propTypes2$3.default.shape({
        font: _propTypes2$3.default.string.isRequired,
        weights: _propTypes2$3.default.arrayOf(_propTypes2$3.default.oneOfType([_propTypes2$3.default.string, _propTypes2$3.default.number]))
    })).isRequired,
    subsets: _propTypes2$3.default.arrayOf(_propTypes2$3.default.string),
    display: _propTypes2$3.default.string
};

build$3.default = GoogleFontLoader$3;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$7 = function() {
    __assign$7 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$7.apply(this, arguments);
};

function mode$3(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid$3 = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode$3('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode$3('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode$3('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode$3(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode$3(color, 'gray.800')(props),
        _hover: {
            bg: mode$3(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode$3(activeBg, c + ".400")(props) },
    };
};

var components$3 = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$3('primary.500', 'primary.200')(props),
                    borderColor: mode$3('primary.500', 'primary.200')(props),
                    color: mode$3('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$3('v.600', 'primary.300')(props),
                        borderColor: mode$3('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$3('gray.200', 'transparent')(props),
                        bg: mode$3('gray.200', 'whiteAlpha.300')(props),
                        color: mode$3('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$3('primary.500', 'primary.200')(props),
                    borderColor: mode$3('primary.500', 'primary.200')(props),
                    color: mode$3('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$3('v.600', 'primary.300')(props),
                        borderColor: mode$3('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$3('gray.200', 'transparent')(props),
                        bg: mode$3('gray.200', 'whiteAlpha.300')(props),
                        color: mode$3('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode$3('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode$3('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode$3('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid$3,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode$3('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode$3('1px', '1px')(props),
                    borderColor: mode$3('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode$3('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode$3('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode$3('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode$3(c + ".600", c + ".300")(props),
                            borderRightColor: mode$3('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode$3('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode$3('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config$3 = {
    useSystemColorMode: false,
};

var fonts$3 = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors$3 = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles$3 = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode$3('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes$3 = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows$3 = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii$3 = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme$3 = {
    config: config$3,
    styles: styles$3,
    fonts: fonts$3,
    colors: colors$3,
    sizes: sizes$3,
    shadows: shadows$3,
    radii: radii$3,
    components: components$3,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
react.extendTheme(__assign$7(__assign$7({}, customTheme$3), { config: __assign$7(__assign$7({}, customTheme$3.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$6 = function() {
    __assign$6 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$6.apply(this, arguments);
};

function __rest$3(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

// theme.colors
var setThemeSingleColor$3 = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor$3 = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette$3 = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor$3(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors$3 = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor$3(token, colors[token]);
        }
        else {
            setThemeColorPalette$3(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont$3 = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts$3 = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont$3(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes$3 = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize$3(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings$3 = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing$3(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights$3 = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight$3(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows$3 = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow$3(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings$3 = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing$3(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius$3 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses$3 = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius$3(size, radii[size]);
    }
};
var setThemeTokens$3 = function (theme) {
    setThemeColors$3(theme.colors);
    setThemeTypograghyFontSizes$3(theme.fontSizes);
    setThemeTypographyFonts$3(theme.fonts);
    setThemeTypographyLetterSpacings$3(theme.letterSpacings);
    setThemeTypographyLineHeights$3(theme.lineHeights);
    setThemeShadows$3(theme.shadows);
    setThemeBorderRadiuses$3(theme.radii);
    setThemeSpacings$3(theme.space);
};
var THEME_STATE_LOCAL_STORAGE_KEY$3 = 'hypertheme-edit-state';
var GOOGLE_FONTS_LOCAL_STORAGE_KEY$2 = 'hypertheme-google-fonts-state';

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY$3, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens$3(newValue.currentTheme);
                }
            });
        },
    ],
});

recoil.atom({
    key: 'googleFontFamiliesState',
    default: {
        initialized: false,
        toLoadFonts: [],
        fonts: [],
        fontFamilies: [],
        toLoadVariants: {},
    },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else if (newValue.initialized) {
                    localStorage.setItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY$2, JSON.stringify({
                        toLoadFonts: newValue.toLoadFonts,
                        toLoadVariants: newValue.toLoadVariants,
                    }));
                }
            });
        },
    ],
});

var cx$3 = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr$3 = function (condition) {
    return (condition ? '' : undefined);
};
react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest$3(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest$3(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign$6({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign$6(__assign$6({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign$6({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign$6({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign$6({}, getRootProps(), { className: cx$3('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign$6({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign$6({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr$3(state.isChecked), "data-hover": dataAttr$3(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign$6({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var build$2 = {};

var propTypes$2 = {exports: {}};

var reactIs$2 = {exports: {}};

var reactIs_production_min$2 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$2="function"===typeof Symbol&&Symbol.for,c$2=b$2?Symbol.for("react.element"):60103,d$2=b$2?Symbol.for("react.portal"):60106,e$2=b$2?Symbol.for("react.fragment"):60107,f$2=b$2?Symbol.for("react.strict_mode"):60108,g$2=b$2?Symbol.for("react.profiler"):60114,h$2=b$2?Symbol.for("react.provider"):60109,k$2=b$2?Symbol.for("react.context"):60110,l$2=b$2?Symbol.for("react.async_mode"):60111,m$2=b$2?Symbol.for("react.concurrent_mode"):60111,n$2=b$2?Symbol.for("react.forward_ref"):60112,p$2=b$2?Symbol.for("react.suspense"):60113,q$2=b$2?
Symbol.for("react.suspense_list"):60120,r$2=b$2?Symbol.for("react.memo"):60115,t$2=b$2?Symbol.for("react.lazy"):60116,v$2=b$2?Symbol.for("react.block"):60121,w$2=b$2?Symbol.for("react.fundamental"):60117,x$2=b$2?Symbol.for("react.responder"):60118,y$2=b$2?Symbol.for("react.scope"):60119;
function z$2(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$2:switch(a=a.type,a){case l$2:case m$2:case e$2:case g$2:case f$2:case p$2:return a;default:switch(a=a&&a.$$typeof,a){case k$2:case n$2:case t$2:case r$2:case h$2:return a;default:return u}}case d$2:return u}}}function A$2(a){return z$2(a)===m$2}reactIs_production_min$2.AsyncMode=l$2;reactIs_production_min$2.ConcurrentMode=m$2;reactIs_production_min$2.ContextConsumer=k$2;reactIs_production_min$2.ContextProvider=h$2;reactIs_production_min$2.Element=c$2;reactIs_production_min$2.ForwardRef=n$2;reactIs_production_min$2.Fragment=e$2;reactIs_production_min$2.Lazy=t$2;reactIs_production_min$2.Memo=r$2;reactIs_production_min$2.Portal=d$2;
reactIs_production_min$2.Profiler=g$2;reactIs_production_min$2.StrictMode=f$2;reactIs_production_min$2.Suspense=p$2;reactIs_production_min$2.isAsyncMode=function(a){return A$2(a)||z$2(a)===l$2};reactIs_production_min$2.isConcurrentMode=A$2;reactIs_production_min$2.isContextConsumer=function(a){return z$2(a)===k$2};reactIs_production_min$2.isContextProvider=function(a){return z$2(a)===h$2};reactIs_production_min$2.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c$2};reactIs_production_min$2.isForwardRef=function(a){return z$2(a)===n$2};reactIs_production_min$2.isFragment=function(a){return z$2(a)===e$2};reactIs_production_min$2.isLazy=function(a){return z$2(a)===t$2};
reactIs_production_min$2.isMemo=function(a){return z$2(a)===r$2};reactIs_production_min$2.isPortal=function(a){return z$2(a)===d$2};reactIs_production_min$2.isProfiler=function(a){return z$2(a)===g$2};reactIs_production_min$2.isStrictMode=function(a){return z$2(a)===f$2};reactIs_production_min$2.isSuspense=function(a){return z$2(a)===p$2};
reactIs_production_min$2.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e$2||a===m$2||a===g$2||a===f$2||a===p$2||a===q$2||"object"===typeof a&&null!==a&&(a.$$typeof===t$2||a.$$typeof===r$2||a.$$typeof===h$2||a.$$typeof===k$2||a.$$typeof===n$2||a.$$typeof===w$2||a.$$typeof===x$2||a.$$typeof===y$2||a.$$typeof===v$2)};reactIs_production_min$2.typeOf=z$2;

var reactIs_development$2 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development$2.AsyncMode = AsyncMode;
reactIs_development$2.ConcurrentMode = ConcurrentMode;
reactIs_development$2.ContextConsumer = ContextConsumer;
reactIs_development$2.ContextProvider = ContextProvider;
reactIs_development$2.Element = Element;
reactIs_development$2.ForwardRef = ForwardRef;
reactIs_development$2.Fragment = Fragment;
reactIs_development$2.Lazy = Lazy;
reactIs_development$2.Memo = Memo;
reactIs_development$2.Portal = Portal;
reactIs_development$2.Profiler = Profiler;
reactIs_development$2.StrictMode = StrictMode;
reactIs_development$2.Suspense = Suspense;
reactIs_development$2.isAsyncMode = isAsyncMode;
reactIs_development$2.isConcurrentMode = isConcurrentMode;
reactIs_development$2.isContextConsumer = isContextConsumer;
reactIs_development$2.isContextProvider = isContextProvider;
reactIs_development$2.isElement = isElement;
reactIs_development$2.isForwardRef = isForwardRef;
reactIs_development$2.isFragment = isFragment;
reactIs_development$2.isLazy = isLazy;
reactIs_development$2.isMemo = isMemo;
reactIs_development$2.isPortal = isPortal;
reactIs_development$2.isProfiler = isProfiler;
reactIs_development$2.isStrictMode = isStrictMode;
reactIs_development$2.isSuspense = isSuspense;
reactIs_development$2.isValidElementType = isValidElementType;
reactIs_development$2.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs$2.exports = reactIs_production_min$2;
} else {
  reactIs$2.exports = reactIs_development$2;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols$2 = Object.getOwnPropertySymbols;
var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
var propIsEnumerable$2 = Object.prototype.propertyIsEnumerable;

function toObject$2(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative$2() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$2 = shouldUseNative$2() ? Object.assign : function (target, source) {
	var from;
	var to = toObject$2(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$2.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols$2) {
			symbols = getOwnPropertySymbols$2(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$2.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$b = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1$2 = ReactPropTypesSecret$b;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$5 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$a = ReactPropTypesSecret_1$2;
  var loggedTypeFailures$2 = {};
  var has$5 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$5 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$5(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$5(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$a);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$5(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures$2)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures$2[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$5(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$5.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures$2 = {};
  }
};

var checkPropTypes_1$2 = checkPropTypes$5;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$5 = reactIs$2.exports;
var assign$2 = objectAssign$2;

var ReactPropTypesSecret$9 = ReactPropTypesSecret_1$2;
var checkPropTypes$4 = checkPropTypes_1$2;

var has$4 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$4 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$4 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull$2() {
  return null;
}

var factoryWithTypeCheckers$2 = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$9) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$4(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull$2);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$9);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$5.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$4(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$4('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull$2;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$4(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$9);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$4('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull$2;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$4(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull$2;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$9) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$9);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign$2({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$9);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes$4;
  ReactPropTypes.resetWarningCache = checkPropTypes$4.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$8 = ReactPropTypesSecret_1$2;

function emptyFunction$2() {}
function emptyFunctionWithReset$2() {}
emptyFunctionWithReset$2.resetWarningCache = emptyFunction$2;

var factoryWithThrowingShims$2 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret$8) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset$2,
    resetWarningCache: emptyFunction$2
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs$4 = reactIs$2.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess$2 = true;
  propTypes$2.exports = factoryWithTypeCheckers$2(ReactIs$4.isElement, throwOnDirectAccess$2);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes$2.exports = factoryWithThrowingShims$2();
}

Object.defineProperty(build$2, "__esModule", {
    value: true
});

var _slicedToArray$2 = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react$2 = React__default["default"];

var _propTypes$2 = propTypes$2.exports;

var _propTypes2$2 = _interopRequireDefault$2(_propTypes$2);

function _interopRequireDefault$2(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray$2(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var createLink$2 = function createLink(fonts, subsets, display) {
    var families = fonts.reduce(function (acc, font) {
        var family = font.font.replace(/ +/g, '+');
        var weights = (font.weights || []).join(',');

        return [].concat(_toConsumableArray$2(acc), [family + (weights && ':' + weights)]);
    }, []).join('|');

    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://fonts.googleapis.com/css?family=' + families;

    if (subsets && Array.isArray(subsets) && subsets.length > 0) {
        link.href += '&subset=' + subsets.join(',');
    }

    if (display) {
        link.href += '&display=' + display;
    }

    return link;
};

var GoogleFontLoader$2 = function GoogleFontLoader(_ref) {
    var fonts = _ref.fonts,
        subsets = _ref.subsets,
        _ref$display = _ref.display,
        display = _ref$display === undefined ? null : _ref$display;

    var _useState = (0, _react$2.useState)(createLink$2(fonts, subsets, display)),
        _useState2 = _slicedToArray$2(_useState, 2),
        link = _useState2[0],
        setLink = _useState2[1];

    (0, _react$2.useEffect)(function () {
        document.head.appendChild(link);

        return function () {
            return document.head.removeChild(link);
        };
    }, [link]);

    (0, _react$2.useEffect)(function () {
        setLink(createLink$2(fonts, subsets, display));
    }, [fonts, subsets, display]);

    return null;
};

GoogleFontLoader$2.propTypes = {
    fonts: _propTypes2$2.default.arrayOf(_propTypes2$2.default.shape({
        font: _propTypes2$2.default.string.isRequired,
        weights: _propTypes2$2.default.arrayOf(_propTypes2$2.default.oneOfType([_propTypes2$2.default.string, _propTypes2$2.default.number]))
    })).isRequired,
    subsets: _propTypes2$2.default.arrayOf(_propTypes2$2.default.string),
    display: _propTypes2$2.default.string
};

build$2.default = GoogleFontLoader$2;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$5 = function() {
    __assign$5 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$5.apply(this, arguments);
};

function mode$2(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid$2 = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode$2('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode$2('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode$2('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode$2(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode$2(color, 'gray.800')(props),
        _hover: {
            bg: mode$2(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode$2(activeBg, c + ".400")(props) },
    };
};

var components$2 = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$2('primary.500', 'primary.200')(props),
                    borderColor: mode$2('primary.500', 'primary.200')(props),
                    color: mode$2('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$2('v.600', 'primary.300')(props),
                        borderColor: mode$2('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$2('gray.200', 'transparent')(props),
                        bg: mode$2('gray.200', 'whiteAlpha.300')(props),
                        color: mode$2('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$2('primary.500', 'primary.200')(props),
                    borderColor: mode$2('primary.500', 'primary.200')(props),
                    color: mode$2('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$2('v.600', 'primary.300')(props),
                        borderColor: mode$2('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$2('gray.200', 'transparent')(props),
                        bg: mode$2('gray.200', 'whiteAlpha.300')(props),
                        color: mode$2('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode$2('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode$2('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode$2('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid$2,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode$2('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode$2('1px', '1px')(props),
                    borderColor: mode$2('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode$2('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode$2('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode$2('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode$2(c + ".600", c + ".300")(props),
                            borderRightColor: mode$2('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode$2('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode$2('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config$2 = {
    useSystemColorMode: false,
};

var fonts$2 = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors$2 = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles$2 = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode$2('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes$2 = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows$2 = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii$2 = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme$2 = {
    config: config$2,
    styles: styles$2,
    fonts: fonts$2,
    colors: colors$2,
    sizes: sizes$2,
    shadows: shadows$2,
    radii: radii$2,
    components: components$2,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
react.extendTheme(__assign$5(__assign$5({}, customTheme$2), { config: __assign$5(__assign$5({}, customTheme$2.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$4 = function() {
    __assign$4 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$4.apply(this, arguments);
};

function __rest$2(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

// theme.colors
var setThemeSingleColor$2 = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor$2 = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette$2 = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor$2(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors$2 = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor$2(token, colors[token]);
        }
        else {
            setThemeColorPalette$2(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont$2 = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts$2 = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont$2(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes$2 = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize$2(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings$2 = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing$2(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights$2 = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight$2(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows$2 = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow$2(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings$2 = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing$2(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius$2 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses$2 = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius$2(size, radii[size]);
    }
};
var setThemeTokens$2 = function (theme) {
    setThemeColors$2(theme.colors);
    setThemeTypograghyFontSizes$2(theme.fontSizes);
    setThemeTypographyFonts$2(theme.fonts);
    setThemeTypographyLetterSpacings$2(theme.letterSpacings);
    setThemeTypographyLineHeights$2(theme.lineHeights);
    setThemeShadows$2(theme.shadows);
    setThemeBorderRadiuses$2(theme.radii);
    setThemeSpacings$2(theme.space);
};
var THEME_STATE_LOCAL_STORAGE_KEY$2 = 'hypertheme-edit-state';
var GOOGLE_FONTS_LOCAL_STORAGE_KEY$1 = 'hypertheme-google-fonts-state';

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY$2, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens$2(newValue.currentTheme);
                }
            });
        },
    ],
});

recoil.atom({
    key: 'googleFontFamiliesState',
    default: {
        initialized: false,
        toLoadFonts: [],
        fonts: [],
        fontFamilies: [],
        toLoadVariants: {},
    },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else if (newValue.initialized) {
                    localStorage.setItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY$1, JSON.stringify({
                        toLoadFonts: newValue.toLoadFonts,
                        toLoadVariants: newValue.toLoadVariants,
                    }));
                }
            });
        },
    ],
});

var cx$2 = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr$2 = function (condition) {
    return (condition ? '' : undefined);
};
react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest$2(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest$2(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign$4({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign$4(__assign$4({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign$4({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign$4({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign$4({}, getRootProps(), { className: cx$2('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign$4({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign$4({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr$2(state.isChecked), "data-hover": dataAttr$2(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign$4({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var build$1 = {};

var propTypes$1 = {exports: {}};

var reactIs$1 = {exports: {}};

var reactIs_production_min$1 = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b$1="function"===typeof Symbol&&Symbol.for,c$1=b$1?Symbol.for("react.element"):60103,d$1=b$1?Symbol.for("react.portal"):60106,e$1=b$1?Symbol.for("react.fragment"):60107,f$1=b$1?Symbol.for("react.strict_mode"):60108,g$1=b$1?Symbol.for("react.profiler"):60114,h$1=b$1?Symbol.for("react.provider"):60109,k$1=b$1?Symbol.for("react.context"):60110,l$1=b$1?Symbol.for("react.async_mode"):60111,m$1=b$1?Symbol.for("react.concurrent_mode"):60111,n$1=b$1?Symbol.for("react.forward_ref"):60112,p$1=b$1?Symbol.for("react.suspense"):60113,q$1=b$1?
Symbol.for("react.suspense_list"):60120,r$1=b$1?Symbol.for("react.memo"):60115,t$1=b$1?Symbol.for("react.lazy"):60116,v$1=b$1?Symbol.for("react.block"):60121,w$1=b$1?Symbol.for("react.fundamental"):60117,x$1=b$1?Symbol.for("react.responder"):60118,y$1=b$1?Symbol.for("react.scope"):60119;
function z$1(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c$1:switch(a=a.type,a){case l$1:case m$1:case e$1:case g$1:case f$1:case p$1:return a;default:switch(a=a&&a.$$typeof,a){case k$1:case n$1:case t$1:case r$1:case h$1:return a;default:return u}}case d$1:return u}}}function A$1(a){return z$1(a)===m$1}reactIs_production_min$1.AsyncMode=l$1;reactIs_production_min$1.ConcurrentMode=m$1;reactIs_production_min$1.ContextConsumer=k$1;reactIs_production_min$1.ContextProvider=h$1;reactIs_production_min$1.Element=c$1;reactIs_production_min$1.ForwardRef=n$1;reactIs_production_min$1.Fragment=e$1;reactIs_production_min$1.Lazy=t$1;reactIs_production_min$1.Memo=r$1;reactIs_production_min$1.Portal=d$1;
reactIs_production_min$1.Profiler=g$1;reactIs_production_min$1.StrictMode=f$1;reactIs_production_min$1.Suspense=p$1;reactIs_production_min$1.isAsyncMode=function(a){return A$1(a)||z$1(a)===l$1};reactIs_production_min$1.isConcurrentMode=A$1;reactIs_production_min$1.isContextConsumer=function(a){return z$1(a)===k$1};reactIs_production_min$1.isContextProvider=function(a){return z$1(a)===h$1};reactIs_production_min$1.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c$1};reactIs_production_min$1.isForwardRef=function(a){return z$1(a)===n$1};reactIs_production_min$1.isFragment=function(a){return z$1(a)===e$1};reactIs_production_min$1.isLazy=function(a){return z$1(a)===t$1};
reactIs_production_min$1.isMemo=function(a){return z$1(a)===r$1};reactIs_production_min$1.isPortal=function(a){return z$1(a)===d$1};reactIs_production_min$1.isProfiler=function(a){return z$1(a)===g$1};reactIs_production_min$1.isStrictMode=function(a){return z$1(a)===f$1};reactIs_production_min$1.isSuspense=function(a){return z$1(a)===p$1};
reactIs_production_min$1.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e$1||a===m$1||a===g$1||a===f$1||a===p$1||a===q$1||"object"===typeof a&&null!==a&&(a.$$typeof===t$1||a.$$typeof===r$1||a.$$typeof===h$1||a.$$typeof===k$1||a.$$typeof===n$1||a.$$typeof===w$1||a.$$typeof===x$1||a.$$typeof===y$1||a.$$typeof===v$1)};reactIs_production_min$1.typeOf=z$1;

var reactIs_development$1 = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development$1.AsyncMode = AsyncMode;
reactIs_development$1.ConcurrentMode = ConcurrentMode;
reactIs_development$1.ContextConsumer = ContextConsumer;
reactIs_development$1.ContextProvider = ContextProvider;
reactIs_development$1.Element = Element;
reactIs_development$1.ForwardRef = ForwardRef;
reactIs_development$1.Fragment = Fragment;
reactIs_development$1.Lazy = Lazy;
reactIs_development$1.Memo = Memo;
reactIs_development$1.Portal = Portal;
reactIs_development$1.Profiler = Profiler;
reactIs_development$1.StrictMode = StrictMode;
reactIs_development$1.Suspense = Suspense;
reactIs_development$1.isAsyncMode = isAsyncMode;
reactIs_development$1.isConcurrentMode = isConcurrentMode;
reactIs_development$1.isContextConsumer = isContextConsumer;
reactIs_development$1.isContextProvider = isContextProvider;
reactIs_development$1.isElement = isElement;
reactIs_development$1.isForwardRef = isForwardRef;
reactIs_development$1.isFragment = isFragment;
reactIs_development$1.isLazy = isLazy;
reactIs_development$1.isMemo = isMemo;
reactIs_development$1.isPortal = isPortal;
reactIs_development$1.isProfiler = isProfiler;
reactIs_development$1.isStrictMode = isStrictMode;
reactIs_development$1.isSuspense = isSuspense;
reactIs_development$1.isValidElementType = isValidElementType;
reactIs_development$1.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs$1.exports = reactIs_production_min$1;
} else {
  reactIs$1.exports = reactIs_development$1;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols$1 = Object.getOwnPropertySymbols;
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
var propIsEnumerable$1 = Object.prototype.propertyIsEnumerable;

function toObject$1(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative$1() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign$1 = shouldUseNative$1() ? Object.assign : function (target, source) {
	var from;
	var to = toObject$1(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty$1.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols$1) {
			symbols = getOwnPropertySymbols$1(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable$1.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$7 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1$1 = ReactPropTypesSecret$7;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$3 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$6 = ReactPropTypesSecret_1$1;
  var loggedTypeFailures$1 = {};
  var has$3 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$3 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$3(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$3(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$6);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$3(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures$1)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures$1[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$3(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$3.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures$1 = {};
  }
};

var checkPropTypes_1$1 = checkPropTypes$3;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$3 = reactIs$1.exports;
var assign$1 = objectAssign$1;

var ReactPropTypesSecret$5 = ReactPropTypesSecret_1$1;
var checkPropTypes$2 = checkPropTypes_1$1;

var has$2 = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning$2 = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$2 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull$1() {
  return null;
}

var factoryWithTypeCheckers$1 = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$5) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning$2(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull$1);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$5);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$3.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$2(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning$2('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull$1;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has$2(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$5);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$2('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull$1;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning$2(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull$1;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$5) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$5);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign$1({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$5);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes$2;
  ReactPropTypes.resetWarningCache = checkPropTypes$2.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$4 = ReactPropTypesSecret_1$1;

function emptyFunction$1() {}
function emptyFunctionWithReset$1() {}
emptyFunctionWithReset$1.resetWarningCache = emptyFunction$1;

var factoryWithThrowingShims$1 = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret$4) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset$1,
    resetWarningCache: emptyFunction$1
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs$2 = reactIs$1.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess$1 = true;
  propTypes$1.exports = factoryWithTypeCheckers$1(ReactIs$2.isElement, throwOnDirectAccess$1);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes$1.exports = factoryWithThrowingShims$1();
}

Object.defineProperty(build$1, "__esModule", {
    value: true
});

var _slicedToArray$1 = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react$1 = React__default["default"];

var _propTypes$1 = propTypes$1.exports;

var _propTypes2$1 = _interopRequireDefault$1(_propTypes$1);

function _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var createLink$1 = function createLink(fonts, subsets, display) {
    var families = fonts.reduce(function (acc, font) {
        var family = font.font.replace(/ +/g, '+');
        var weights = (font.weights || []).join(',');

        return [].concat(_toConsumableArray$1(acc), [family + (weights && ':' + weights)]);
    }, []).join('|');

    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://fonts.googleapis.com/css?family=' + families;

    if (subsets && Array.isArray(subsets) && subsets.length > 0) {
        link.href += '&subset=' + subsets.join(',');
    }

    if (display) {
        link.href += '&display=' + display;
    }

    return link;
};

var GoogleFontLoader$1 = function GoogleFontLoader(_ref) {
    var fonts = _ref.fonts,
        subsets = _ref.subsets,
        _ref$display = _ref.display,
        display = _ref$display === undefined ? null : _ref$display;

    var _useState = (0, _react$1.useState)(createLink$1(fonts, subsets, display)),
        _useState2 = _slicedToArray$1(_useState, 2),
        link = _useState2[0],
        setLink = _useState2[1];

    (0, _react$1.useEffect)(function () {
        document.head.appendChild(link);

        return function () {
            return document.head.removeChild(link);
        };
    }, [link]);

    (0, _react$1.useEffect)(function () {
        setLink(createLink$1(fonts, subsets, display));
    }, [fonts, subsets, display]);

    return null;
};

GoogleFontLoader$1.propTypes = {
    fonts: _propTypes2$1.default.arrayOf(_propTypes2$1.default.shape({
        font: _propTypes2$1.default.string.isRequired,
        weights: _propTypes2$1.default.arrayOf(_propTypes2$1.default.oneOfType([_propTypes2$1.default.string, _propTypes2$1.default.number]))
    })).isRequired,
    subsets: _propTypes2$1.default.arrayOf(_propTypes2$1.default.string),
    display: _propTypes2$1.default.string
};

build$1.default = GoogleFontLoader$1;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$3 = function() {
    __assign$3 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$3.apply(this, arguments);
};

function mode$1(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid$1 = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode$1('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode$1('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode$1('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode$1(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode$1(color, 'gray.800')(props),
        _hover: {
            bg: mode$1(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode$1(activeBg, c + ".400")(props) },
    };
};

var components$1 = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$1('primary.500', 'primary.200')(props),
                    borderColor: mode$1('primary.500', 'primary.200')(props),
                    color: mode$1('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$1('v.600', 'primary.300')(props),
                        borderColor: mode$1('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$1('gray.200', 'transparent')(props),
                        bg: mode$1('gray.200', 'whiteAlpha.300')(props),
                        color: mode$1('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode$1('primary.500', 'primary.200')(props),
                    borderColor: mode$1('primary.500', 'primary.200')(props),
                    color: mode$1('white', 'gray.900')(props),
                    _hover: {
                        bg: mode$1('v.600', 'primary.300')(props),
                        borderColor: mode$1('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode$1('gray.200', 'transparent')(props),
                        bg: mode$1('gray.200', 'whiteAlpha.300')(props),
                        color: mode$1('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode$1('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode$1('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode$1('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid$1,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode$1('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode$1('1px', '1px')(props),
                    borderColor: mode$1('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode$1('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode$1('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode$1('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode$1(c + ".600", c + ".300")(props),
                            borderRightColor: mode$1('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode$1('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode$1('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config$1 = {
    useSystemColorMode: false,
};

var fonts$1 = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors$1 = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles$1 = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode$1('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes$1 = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows$1 = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii$1 = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme$1 = {
    config: config$1,
    styles: styles$1,
    fonts: fonts$1,
    colors: colors$1,
    sizes: sizes$1,
    shadows: shadows$1,
    radii: radii$1,
    components: components$1,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
react.extendTheme(__assign$3(__assign$3({}, customTheme$1), { config: __assign$3(__assign$3({}, customTheme$1.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$2 = function() {
    __assign$2 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$2.apply(this, arguments);
};

function __rest$1(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

// theme.colors
var setThemeSingleColor$1 = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor$1 = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette$1 = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor$1(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors$1 = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor$1(token, colors[token]);
        }
        else {
            setThemeColorPalette$1(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont$1 = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts$1 = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont$1(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes$1 = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize$1(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings$1 = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing$1(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights$1 = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight$1(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows$1 = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow$1(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings$1 = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing$1(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius$1 = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses$1 = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius$1(size, radii[size]);
    }
};
var setThemeTokens$1 = function (theme) {
    setThemeColors$1(theme.colors);
    setThemeTypograghyFontSizes$1(theme.fontSizes);
    setThemeTypographyFonts$1(theme.fonts);
    setThemeTypographyLetterSpacings$1(theme.letterSpacings);
    setThemeTypographyLineHeights$1(theme.lineHeights);
    setThemeShadows$1(theme.shadows);
    setThemeBorderRadiuses$1(theme.radii);
    setThemeSpacings$1(theme.space);
};
var THEME_STATE_LOCAL_STORAGE_KEY$1 = 'hypertheme-edit-state';
var GOOGLE_FONTS_LOCAL_STORAGE_KEY = 'hypertheme-google-fonts-state';

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY$1, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens$1(newValue.currentTheme);
                }
            });
        },
    ],
});

recoil.atom({
    key: 'googleFontFamiliesState',
    default: {
        initialized: false,
        toLoadFonts: [],
        fonts: [],
        fontFamilies: [],
        toLoadVariants: {},
    },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else if (newValue.initialized) {
                    localStorage.setItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY, JSON.stringify({
                        toLoadFonts: newValue.toLoadFonts,
                        toLoadVariants: newValue.toLoadVariants,
                    }));
                }
            });
        },
    ],
});

var cx$1 = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr$1 = function (condition) {
    return (condition ? '' : undefined);
};
react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest$1(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest$1(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign$2({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign$2(__assign$2({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign$2({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign$2({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign$2({}, getRootProps(), { className: cx$1('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign$2({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign$2({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr$1(state.isChecked), "data-hover": dataAttr$1(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign$2({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var build = {};

var propTypes = {exports: {}};

var reactIs = {exports: {}};

var reactIs_production_min = {};

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}reactIs_production_min.AsyncMode=l;reactIs_production_min.ConcurrentMode=m;reactIs_production_min.ContextConsumer=k;reactIs_production_min.ContextProvider=h;reactIs_production_min.Element=c;reactIs_production_min.ForwardRef=n;reactIs_production_min.Fragment=e;reactIs_production_min.Lazy=t;reactIs_production_min.Memo=r;reactIs_production_min.Portal=d;
reactIs_production_min.Profiler=g;reactIs_production_min.StrictMode=f;reactIs_production_min.Suspense=p;reactIs_production_min.isAsyncMode=function(a){return A(a)||z(a)===l};reactIs_production_min.isConcurrentMode=A;reactIs_production_min.isContextConsumer=function(a){return z(a)===k};reactIs_production_min.isContextProvider=function(a){return z(a)===h};reactIs_production_min.isElement=function(a){return "object"===typeof a&&null!==a&&a.$$typeof===c};reactIs_production_min.isForwardRef=function(a){return z(a)===n};reactIs_production_min.isFragment=function(a){return z(a)===e};reactIs_production_min.isLazy=function(a){return z(a)===t};
reactIs_production_min.isMemo=function(a){return z(a)===r};reactIs_production_min.isPortal=function(a){return z(a)===d};reactIs_production_min.isProfiler=function(a){return z(a)===g};reactIs_production_min.isStrictMode=function(a){return z(a)===f};reactIs_production_min.isSuspense=function(a){return z(a)===p};
reactIs_production_min.isValidElementType=function(a){return "string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};reactIs_production_min.typeOf=z;

var reactIs_development = {};

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

reactIs_development.AsyncMode = AsyncMode;
reactIs_development.ConcurrentMode = ConcurrentMode;
reactIs_development.ContextConsumer = ContextConsumer;
reactIs_development.ContextProvider = ContextProvider;
reactIs_development.Element = Element;
reactIs_development.ForwardRef = ForwardRef;
reactIs_development.Fragment = Fragment;
reactIs_development.Lazy = Lazy;
reactIs_development.Memo = Memo;
reactIs_development.Portal = Portal;
reactIs_development.Profiler = Profiler;
reactIs_development.StrictMode = StrictMode;
reactIs_development.Suspense = Suspense;
reactIs_development.isAsyncMode = isAsyncMode;
reactIs_development.isConcurrentMode = isConcurrentMode;
reactIs_development.isContextConsumer = isContextConsumer;
reactIs_development.isContextProvider = isContextProvider;
reactIs_development.isElement = isElement;
reactIs_development.isForwardRef = isForwardRef;
reactIs_development.isFragment = isFragment;
reactIs_development.isLazy = isLazy;
reactIs_development.isMemo = isMemo;
reactIs_development.isPortal = isPortal;
reactIs_development.isProfiler = isProfiler;
reactIs_development.isStrictMode = isStrictMode;
reactIs_development.isSuspense = isSuspense;
reactIs_development.isValidElementType = isValidElementType;
reactIs_development.typeOf = typeOf;
  })();
}

if (process.env.NODE_ENV === 'production') {
  reactIs.exports = reactIs_production_min;
} else {
  reactIs.exports = reactIs_development;
}

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret$3 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var ReactPropTypesSecret_1 = ReactPropTypesSecret$3;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var printWarning$1 = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$2 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning$1 = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes$1(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has$1(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$2);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning$1(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning$1(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes$1.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes$1;

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactIs$1 = reactIs.exports;
var assign = objectAssign;

var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
var checkPropTypes = checkPropTypes_1;

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret$1) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret$1);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs$1.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret$1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret$1);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var ReactPropTypesSecret = ReactPropTypesSecret_1;

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  }  shim.isRequired = shim;
  function getShim() {
    return shim;
  }  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = reactIs.exports;

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  propTypes.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  propTypes.exports = factoryWithThrowingShims();
}

Object.defineProperty(build, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = React__default["default"];

var _propTypes = propTypes.exports;

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var createLink = function createLink(fonts, subsets, display) {
    var families = fonts.reduce(function (acc, font) {
        var family = font.font.replace(/ +/g, '+');
        var weights = (font.weights || []).join(',');

        return [].concat(_toConsumableArray(acc), [family + (weights && ':' + weights)]);
    }, []).join('|');

    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://fonts.googleapis.com/css?family=' + families;

    if (subsets && Array.isArray(subsets) && subsets.length > 0) {
        link.href += '&subset=' + subsets.join(',');
    }

    if (display) {
        link.href += '&display=' + display;
    }

    return link;
};

var GoogleFontLoader = function GoogleFontLoader(_ref) {
    var fonts = _ref.fonts,
        subsets = _ref.subsets,
        _ref$display = _ref.display,
        display = _ref$display === undefined ? null : _ref$display;

    var _useState = (0, _react.useState)(createLink(fonts, subsets, display)),
        _useState2 = _slicedToArray(_useState, 2),
        link = _useState2[0],
        setLink = _useState2[1];

    (0, _react.useEffect)(function () {
        document.head.appendChild(link);

        return function () {
            return document.head.removeChild(link);
        };
    }, [link]);

    (0, _react.useEffect)(function () {
        setLink(createLink(fonts, subsets, display));
    }, [fonts, subsets, display]);

    return null;
};

GoogleFontLoader.propTypes = {
    fonts: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        font: _propTypes2.default.string.isRequired,
        weights: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))
    })).isRequired,
    subsets: _propTypes2.default.arrayOf(_propTypes2.default.string),
    display: _propTypes2.default.string
};

build.default = GoogleFontLoader;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign$1 = function() {
    __assign$1 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};

function mode(light, dark) {
  return props => props.colorMode === "dark" ? dark : light;
}

var variantSolid = function (props) {
    var c = props.colorScheme;
    if (c === 'gray') {
        var bg_1 = mode('gray.100', 'whiteAlpha.200')(props);
        return {
            bg: bg_1,
            _hover: {
                bg: mode('gray.200', 'whiteAlpha.300')(props),
                _disabled: {
                    bg: bg_1,
                },
            },
            _active: { bg: mode('gray.300', 'whiteAlpha.400')(props) },
        };
    }
    var bg = c + ".500" , color = 'white' , hoverBg = c + ".600" , activeBg = c + ".700" ;
    var background = mode(bg, c + ".400")(props);
    return {
        bg: background,
        color: mode(color, 'gray.800')(props),
        _hover: {
            bg: mode(hoverBg, c + ".300")(props),
            _disabled: {
                bg: background,
            },
        },
        _active: { bg: mode(activeBg, c + ".400")(props) },
    };
};

var components = {
    // CHAKRA  components
    Checkbox: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode('primary.500', 'primary.200')(props),
                    borderColor: mode('primary.500', 'primary.200')(props),
                    color: mode('white', 'gray.900')(props),
                    _hover: {
                        bg: mode('v.600', 'primary.300')(props),
                        borderColor: mode('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode('gray.200', 'transparent')(props),
                        bg: mode('gray.200', 'whiteAlpha.300')(props),
                        color: mode('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Radio: {
        baseStyle: function (props) { return ({
            control: {
                _checked: {
                    bg: mode('primary.500', 'primary.200')(props),
                    borderColor: mode('primary.500', 'primary.200')(props),
                    color: mode('white', 'gray.900')(props),
                    _hover: {
                        bg: mode('v.600', 'primary.300')(props),
                        borderColor: mode('primary.600', 'primary.300')(props),
                    },
                    _disabled: {
                        borderColor: mode('gray.200', 'transparent')(props),
                        bg: mode('gray.200', 'whiteAlpha.300')(props),
                        color: mode('gray.500', 'whiteAlpha.500')(props),
                    },
                },
            },
        }); },
    },
    Link: {
        baseStyle: {
            _active: {
                boxShadow: 'none',
            },
        },
    },
    Accordion: {
        baseStyle: {
            container: {
                borderTopWidth: '1px',
                borderColor: 'inherit',
                _first: {
                    borderTopWidth: '0px',
                },
                _last: {
                    borderBottomWidth: '0px',
                },
            },
        },
    },
    Input: {
        parts: ['field', 'addon'],
        baseStyle: {
            field: {},
        },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 3,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                    borderRadius: 'md',
                },
            },
        },
        variants: {
            unstyled: {
                field: {
                    boxShadow: 'none',
                },
            },
            outline: {
                field: {
                    outline: 'rgba(125, 125, 125, 0.3)',
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'surface',
                    _hover: {
                        borderColor: 'rgba(125, 125, 125, 0.45)',
                    },
                    _focus: {
                        zIndex: 1,
                        borderColor: 'rgba(125, 125, 125, 0.3)',
                        boxShadow: 'outline',
                    },
                },
            },
        },
        defaultProps: {
            h: 14,
        },
    },
    Select: {
        parts: ['field', 'addon'],
        baseStyle: function (props) { return ({
            field: {
                boxShadow: mode('surface', 'surfaceDark')(props),
                border: 'none',
            },
        }); },
        // Styles for the size variations
        sizes: {
            md: {
                field: {
                    px: 4,
                    h: 12,
                },
            },
            lg: {
                field: {
                    px: 4,
                    h: 14,
                },
            },
            xl: {
                field: {
                    px: 6,
                    h: 16,
                },
            },
        },
        variants: {},
        defaultProps: {},
    },
    Textarea: {
        baseStyle: function (props) { return ({
            boxShadow: mode('surface', 'surfaceDark')(props),
            border: 'none',
        }); },
        variants: {
            outline: {
                outline: 'rgba(125, 125, 125, 0.3)',
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'surface',
                _hover: {
                    borderColor: 'rgba(125, 125, 125, 0.45)',
                },
                _focus: {
                    zIndex: 1,
                    borderColor: 'rgba(125, 125, 125, 0.3)',
                    boxShadow: 'outline',
                },
            },
        },
    },
    Menu: {
        baseStyle: function (props) { return ({
            list: {
                p: 1,
                borderWidth: '0px',
                overflow: 'visible',
                boxShadow: mode('surface', 'surfaceDark')(props),
            },
        }); },
        // Styles for the size variations
        sizes: {},
        variants: {},
        defaultProps: {},
    },
    PinInput: {
        baseStyle: {
            boxShadow: 'surface',
            _hover: {
                borderColor: 'rgba(125, 125, 125, 0.45)',
            },
            _focus: {
                zIndex: 1,
                borderColor: 'rgba(125, 125, 125, 0.3)',
                boxShadow: 'outline !important',
            },
        },
        sizes: {},
    },
    Tag: {
        baseStyle: {},
        sizes: {},
        defaultProps: {},
    },
    Button: {
        baseStyle: {},
        // Styles for the size variations
        sizes: {
            md: {
                px: 4,
                h: 12,
            },
            lg: {
                px: 6,
                h: 14,
            },
            xl: {
                px: 6,
                h: 16,
                fontSize: 'xl',
            },
        },
        // Styles for the visual style variations
        variants: {
            solid: variantSolid,
            gradient: function (_a) {
                var _b = _a.colorScheme, colorScheme = _b === void 0 ? 'gray' : _b, colorMode = _a.colorMode;
                return ({
                    bgColor: colorScheme + ".600",
                    boxShdadow: mode('surface', 'surfaceDark')({ colorMode: colorMode }),
                    bgGradient: "linear(25deg, " + colorScheme + ".500, " + colorScheme + ".400)",
                    color: 'white',
                });
            },
        },
        // The default `size` or `variant` values
        defaultProps: {},
    },
    Tabs: {
        variants: {
            'enclosed-colored': function (props) { return ({
                tablist: {
                    borderWidth: mode('1px', '1px')(props),
                    borderColor: mode('white', 'gray.800')(props),
                    overflow: 'visible',
                    bgColor: mode('transparent', 'transparent')(props),
                    p: 1,
                    borderRadius: 'md',
                },
                tab: {
                    borderWidth: '0',
                    borderRightWidth: '1px',
                    transition: 'all 0.25s',
                    bgColor: 'transparent',
                    _selected: {
                        bgColor: 'primary.500',
                        color: 'white',
                        borderRadius: 'md',
                    },
                    _first: {
                        borderStartRadius: 'md',
                    },
                    _last: {
                        borderEndRadius: 'md',
                        borderRightWidth: '0px',
                    },
                },
            }); },
            line: function (props) {
                var _a;
                var c = props.colorScheme, orientation = props.orientation;
                var isVertical = orientation === 'vertical';
                var marginProp = isVertical ? 'marginStart' : 'marginBottom';
                return {
                    tablist: {
                        bg: mode('white', 'gray.800')(props),
                        borderColor: 'inherit',
                        borderBottom: '0',
                        overflow: 'visible',
                        shadow: mode('surface', 'surfaceDark')(props),
                    },
                    tab: (_a = {
                            pos: 'relative',
                            borderBottom: 'none',
                            overflow: 'visible'
                        },
                        _a[marginProp] = '-1px',
                        _a._selected = {
                            color: mode(c + ".600", c + ".300")(props),
                            borderRightColor: mode('gray.100', 'whiteAlpha.400')(props),
                            '&::before': {
                                opacity: 1,
                                bottom: '-1px',
                                bg: mode('primary.500', 'primary.500')(props),
                            },
                        },
                        _a._active = {
                            bg: mode('gray.200', 'whiteAlpha.300')(props),
                        },
                        _a._disabled = {
                            opacity: 0.4,
                            cursor: 'not-allowed',
                        },
                        _a),
                };
            },
        },
    },
    Drawer: {
        baseStyle: {
            dialog: {
            //  m: { base: 0, md: 2 },
            //    borderRadius: { base: 0, md: 'lg' },
            },
        },
    },
};

var config = {
    useSystemColorMode: false,
};

var fonts = {
    body: 'Sora, -apple-system, system-ui, sans-serif',
    // body: 'Zen Tokyo Zoo',
    heading: 'Sora, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
};

var colors = {
    primary: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    secondary: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    purple: {
        50: '#FBE5FF',
        100: '#F3D4FF',
        200: '#D6BEFB',
        300: '#BB9CF5',
        400: '#A280EB',
        500: '#7F58DE',
        600: '#6140BE',
        700: '#472C9F',
        800: '#301C80',
        900: '#20106A',
    },
    green: {
        50: '#EAFDED',
        100: '#DCFBE7',
        200: '#BBF8D6',
        300: '#94ECC4',
        400: '#75D9B5',
        500: '#4AC1A2',
        600: '#36A593',
        700: '#258A84',
        800: '#176D6F',
        900: '#0E525C',
    },
    gray: {
        50: '#F7FAFC',
        100: '#EDF2F7',
        200: '#E2E8F0',
        300: '#CBD5E0',
        400: '#A0AEC0',
        500: '#718096',
        600: '#4A5568',
        700: '#252b35',
        800: '#1A202C',
        900: '#171923',
    },
};

var styles = {
    global: function (props) { return ({
        body: {
            // fontFamily: 'Sora',
            color: mode('gray.700', 'whiteAlpha.900')(props),
            overflowX: 'hidden',
        },
    }); },
};

var sizes = {
    '3xs': '14rem',
    '2xs': '16rem',
    xs: '20rem',
    sm: '24rem',
    md: '28rem',
    lg: '32rem',
    xl: '36rem',
    '2xl': '42rem',
    '3xl': '48rem',
    '4xl': '56rem',
    '5xl': '64rem',
    '6xl': '72rem',
    '7xl': '80rem',
    '8xl': '90rem',
    container: {
        sm: '640px',
        md: '768px',
        lg: '1024px',
        xl: '1280px',
    },
};

var shadows = {
    surface: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 35px 0 rgba(63,63,68,0.05)',
    surfaceDark: '0 0 0 1px rgba(195,195,195,0.045), 0 1px 35px 0 rgba(0,0,0,0.1)',
    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',
    outline: '0 0 0 3px rgba(125, 125, 125, 0.3)',
    xs: '0 0 0 1px rgba(0, 0, 0, 0.05)',
    base: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
    lg: '0 6px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
    xl: '0 8px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
    '2xl': '0 15px 50px -12px rgba(0, 0, 0, 0.25)',
    inner: 'inset 0 2px 4px 0 rgba(0,0,0,0.06)',
    none: 'none',
};

var radii = {
    none: '0',
    sm: '0.125rem',
    base: '0.75rem',
    md: '6px',
    lg: '12px',
    xl: '18px',
    '2xl': '2.5rem',
    '3xl': '3.5rem',
    full: '9999px',
};

var customTheme = {
    config: config,
    styles: styles,
    fonts: fonts,
    colors: colors,
    sizes: sizes,
    shadows: shadows,
    radii: radii,
    components: components,
    lineHeights: {
        3: '.75rem',
        4: '1rem',
        5: '1.25rem',
        6: '1.5rem',
        7: '1.75rem',
        8: '2rem',
        9: '2.25rem',
        10: '2.5rem',
        normal: 'normal',
        none: '1',
        shorter: '1.25',
        short: '1.375',
        base: '1.5',
        tall: '1.625',
        taller: '2',
    },
};
react.extendTheme(__assign$1(__assign$1({}, customTheme), { config: __assign$1(__assign$1({}, customTheme.config), { cssVarPrefix: 'hypertheme' }) }));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

// theme.colors
var setThemeSingleColor = function (token, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token, value);
};
var setThemeColor = function (token, paletteKey, value) {
    document.documentElement.style.setProperty("--chakra-colors-" + token + "-" + paletteKey, value);
};
var setThemeColorPalette = function (token, newPalette) {
    var paletteKeys = Object.keys(newPalette);
    for (var _i = 0, paletteKeys_1 = paletteKeys; _i < paletteKeys_1.length; _i++) {
        var paletteKey = paletteKeys_1[_i];
        setThemeColor(token, paletteKey, newPalette[paletteKey]);
    }
};
var setThemeColors = function (colors) {
    var tokens = Object.keys(colors);
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof colors[token] === 'string') {
            setThemeSingleColor(token, colors[token]);
        }
        else {
            setThemeColorPalette(token, colors[token]);
        }
    }
};
// theme.fonts
var setThemeTypographyFont = function (section, value) {
    document.documentElement.style.setProperty("--chakra-fonts-" + section, value);
};
var setThemeTypographyFonts = function (fonts) {
    var sections = Object.keys(fonts);
    for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
        var section = sections_1[_i];
        setThemeTypographyFont(section, fonts[section]);
    }
};
// theme.fontSizes
var setThemeTypographyFontSize = function (size, value) {
    document.documentElement.style.setProperty("--chakra-fontSizes-" + size, value);
};
var setThemeTypograghyFontSizes = function (fontSizes) {
    var sizes = Object.keys(fontSizes);
    for (var _i = 0, sizes_1 = sizes; _i < sizes_1.length; _i++) {
        var size = sizes_1[_i];
        setThemeTypographyFontSize(size, fontSizes[size]);
    }
};
// theme.letterSpacings
var setThemeTypographyLetterSpacing = function (size, value) {
    document.documentElement.style.setProperty("--chakra-letterSpacings-" + size, value);
};
var setThemeTypographyLetterSpacings = function (letterSpacings) {
    var sizes = Object.keys(letterSpacings);
    for (var _i = 0, sizes_2 = sizes; _i < sizes_2.length; _i++) {
        var size = sizes_2[_i];
        setThemeTypographyLetterSpacing(size, letterSpacings[size]);
    }
};
// theme.lineHeights
var setThemeTypographyLineHeight = function (size, value) {
    document.documentElement.style.setProperty("--chakra-lineHeights-" + size, value);
};
var setThemeTypographyLineHeights = function (lineHeights) {
    var sizes = Object.keys(lineHeights);
    for (var _i = 0, sizes_3 = sizes; _i < sizes_3.length; _i++) {
        var size = sizes_3[_i];
        setThemeTypographyLineHeight(size, lineHeights[size]);
    }
};
// theme.shadows
var setThemeShadow = function (size, value) {
    document.documentElement.style.setProperty("--chakra-shadows-" + size, value);
};
var setThemeShadows = function (shadows) {
    var sizes = Object.keys(shadows);
    for (var _i = 0, sizes_4 = sizes; _i < sizes_4.length; _i++) {
        var size = sizes_4[_i];
        setThemeShadow(size, shadows[size]);
    }
};
// theme.space
var setThemeSpacing = function (size, value) {
    document.documentElement.style.setProperty("--chakra-space-" + size, value);
};
var setThemeSpacings = function (space) {
    var sizes = Object.keys(space);
    for (var _i = 0, sizes_5 = sizes; _i < sizes_5.length; _i++) {
        var size = sizes_5[_i];
        setThemeSpacing(size, space[size]);
    }
};
// theme.radii
var setThemeBorderRadius = function (size, value) {
    document.documentElement.style.setProperty("--chakra-radii-" + size, value);
};
var setThemeBorderRadiuses = function (radii) {
    var sizes = Object.keys(radii);
    for (var _i = 0, sizes_6 = sizes; _i < sizes_6.length; _i++) {
        var size = sizes_6[_i];
        setThemeBorderRadius(size, radii[size]);
    }
};
var setThemeTokens = function (theme) {
    setThemeColors(theme.colors);
    setThemeTypograghyFontSizes(theme.fontSizes);
    setThemeTypographyFonts(theme.fonts);
    setThemeTypographyLetterSpacings(theme.letterSpacings);
    setThemeTypographyLineHeights(theme.lineHeights);
    setThemeShadows(theme.shadows);
    setThemeBorderRadiuses(theme.radii);
    setThemeSpacings(theme.space);
};
var THEME_STATE_LOCAL_STORAGE_KEY = 'hypertheme-edit-state';

produce.enablePatches();
/**
 * Recoil theme editor state atom
 */
recoil.atom({
    key: 'themeState',
    default: { initialTheme: undefined, currentTheme: undefined, undoable: [], undone: [] },
    effects_UNSTABLE: [
        function (_a) {
            var onSet = _a.onSet; _a.setSelf;
            onSet(function (newValue) {
                if (newValue instanceof recoil.DefaultValue) ;
                else {
                    localStorage.setItem(THEME_STATE_LOCAL_STORAGE_KEY, JSON.stringify({
                        undoable: newValue.undoable,
                        undone: newValue.undone,
                        currentTheme: newValue.currentTheme,
                    }));
                }
            });
        },
        function (_a) {
            var onSet = _a.onSet;
            onSet(function (newValue) {
                if (!(newValue instanceof recoil.DefaultValue)) {
                    setThemeTokens(newValue.currentTheme);
                }
            });
        },
    ],
});

var cx = function () {
    var classNames = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        classNames[_i] = arguments[_i];
    }
    return classNames.filter(Boolean).join(' ');
};
var dataAttr = function (condition) {
    return (condition ? '' : undefined);
};
react.forwardRef(function (props, ref) {
    var _a = props.colorScheme, colorScheme = _a === void 0 ? 'gray' : _a, color = props.color, bgColor = props.bgColor, rest = __rest(props, ["colorScheme", "color", "bgColor"]);
    var styles = react.useMultiStyleConfig('Switch', rest);
    var _b = react.omitThemingProps(rest), _c = _b.spacing, spacing = _c === void 0 ? '0.5rem' : _c, children = _b.children, TrueIcon = _b.trueIcon, FalseIcon = _b.falseIcon, ownProps = __rest(_b, ["spacing", "children", "trueIcon", "falseIcon"]);
    var _d = react.useCheckbox(ownProps), state = _d.state, getInputProps = _d.getInputProps, getCheckboxProps = _d.getCheckboxProps, getRootProps = _d.getRootProps, getLabelProps = _d.getLabelProps;
    var containerStyles = React__namespace.useMemo(function () { return (__assign({ display: 'inline-block', verticalAlign: 'middle', lineHeight: 'normal' }, styles.container)); }, [styles.container]);
    var trackStyles = React__namespace.useMemo(function () { return (__assign(__assign({ display: 'inline-flex', flexShrink: 0, justifyContent: 'flex-start', boxSizing: 'content-box', cursor: 'pointer' }, styles.track), { color: color, bgColor: bgColor, '&[data-checked]': {
            bgColor: bgColor,
        } })); }, [styles.track, color, bgColor]);
    var labelStyles = React__namespace.useMemo(function () { return (__assign({ userSelect: 'none', marginStart: spacing }, styles.label)); }, [spacing, styles.label]);
    var thumbStyles = React__namespace.useMemo(function () { return (__assign({ alignItems: 'center', justifyContent: 'center', d: 'flex' }, styles.thumb)); }, [styles.thumb]);
    var iconStyle = React__namespace.useMemo(function () { return ({
        color: props.color
            ? props.color
            : state.isChecked
                ? colorScheme + ".400"
                : colorScheme + ".700",
    }); }, [props.color, state.isChecked]);
    var iconSize = React__namespace.useMemo(function () {
        if (!props.size || props.size == 'lg') {
            return '1rem';
        }
        else if (props.size == 'sm') {
            return '0.6rem';
        }
        else {
            return '0.75rem';
        }
    }, [props.size]);
    return (React__namespace.createElement(react.chakra.label, __assign({}, getRootProps(), { className: cx('chakra-switch', props.className), sx: containerStyles }),
        React__namespace.createElement("input", __assign({ className: "chakra-switch__input" }, getInputProps({}, ref))),
        React__namespace.createElement(react.chakra.span, __assign({}, getCheckboxProps(), { className: "chakra-switch__track", sx: trackStyles }),
            React__namespace.createElement(react.chakra.span, { __css: thumbStyles, className: "chakra-switch__thumb", "data-checked": dataAttr(state.isChecked), "data-hover": dataAttr(state.isHovered) }, !state.isChecked ? (React__namespace.createElement(react.Icon, { as: FalseIcon, fontSize: iconSize, sx: iconStyle })) : (React__namespace.createElement(react.Icon, { as: TrueIcon, fontSize: iconSize, sx: iconStyle })))),
        children && (React__namespace.createElement(react.chakra.span, __assign({ className: "chakra-switch__label" }, getLabelProps(), { sx: labelStyles }), children))));
});

var GOOGLE_FONTS_API_ENDPOINT = API_ENDPOINT + "/google-fonts";
var GoogleFontFamiliesStateInitializer = function () {
    var _a = recoil.useRecoilState(googleFontFamiliesState), googleFontsState = _a[0], setGoogleFontsState = _a[1];
    var theme = useThemeEditor().theme;
    React.useEffect(function () {
        var init = function () { return __awaiter(void 0, void 0, void 0, function () {
            var result, googleFonts, fontFamilies, savedValue, parsedValue;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, fetch(GOOGLE_FONTS_API_ENDPOINT)];
                    case 1:
                        result = _a.sent();
                        return [4 /*yield*/, result.json()];
                    case 2:
                        googleFonts = _a.sent();
                        fontFamilies = googleFonts.items.map(function (item) { return item.family; });
                        savedValue = localStorage.getItem(GOOGLE_FONTS_LOCAL_STORAGE_KEY$4);
                        if (savedValue) {
                            parsedValue = safeJsonParse(savedValue);
                            if (!parsedValue.error) {
                                setGoogleFontsState(__assign$a(__assign$a({}, parsedValue.value), { fontFamilies: fontFamilies, fonts: googleFonts.items, initialized: true, toLoadFonts: parsedValue.value.toLoadFonts || [], toLoadVariants: parsedValue.value.toLoadVariants || {} }));
                            }
                            return [2 /*return*/];
                        }
                        setGoogleFontsState({
                            fontFamilies: fontFamilies,
                            fonts: googleFonts.items,
                            initialized: true,
                            toLoadFonts: googleFontsState.toLoadFonts || [],
                            toLoadVariants: googleFontsState.toLoadVariants || {},
                        });
                        return [3 /*break*/, 4];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); };
        if (!googleFontsState.initialized) {
            init();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    React.useEffect(function () {
        if (!theme || !theme.fonts) {
            return;
        }
        var newToLoadFonts = [];
        var fontKeys = Object.keys(theme.fonts);
        for (var _i = 0, fontKeys_1 = fontKeys; _i < fontKeys_1.length; _i++) {
            var fontKey = fontKeys_1[_i];
            var font = theme.fonts[fontKey];
            var splittedFontFamily = font.split(',').map(function (item) { return item.trim(); });
            var firstFontFamilyName = splittedFontFamily[0].startsWith('"') && splittedFontFamily[0].endsWith('"')
                ? splittedFontFamily[0].substring(1, splittedFontFamily[0].length - 1)
                : splittedFontFamily[0];
            var googleFontIndex = !googleFontsState.fontFamilies ||
                googleFontsState.fontFamilies.length === 0 ||
                !splittedFontFamily ||
                splittedFontFamily.length === 0
                ? -1
                : googleFontsState.fontFamilies.indexOf(firstFontFamilyName);
            if (googleFontIndex > -1 && googleFontsState.fonts[googleFontIndex]) {
                newToLoadFonts.push(googleFontsState.fonts[googleFontIndex]);
            }
        }
        setGoogleFontsState(__assign$a(__assign$a({}, googleFontsState), { toLoadFonts: newToLoadFonts }));
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [theme === null || theme === void 0 ? void 0 : theme.fonts]);
    var currentGoogleFonts = React.useMemo(function () {
        return googleFontsState.toLoadFonts.map(function (item, index) {
            return {
                font: item.family,
                weights: googleFontsState.toLoadVariants && googleFontsState.toLoadVariants[item.family]
                    ? googleFontsState.toLoadVariants[item.family]
                    : item.variants,
            };
        });
    }, [googleFontsState.toLoadFonts, googleFontsState.toLoadVariants]);
    var currentGoogleFontSubset = React.useMemo(function () {
        return googleFontsState.toLoadFonts.reduce(function (acc, item) {
            return __spreadArray$1(__spreadArray$1([], acc, true), item.subsets, true);
        }, []);
    }, [googleFontsState.toLoadFonts]);
    if (!googleFontsState.initialized) {
        return null;
    }
    return React__default["default"].createElement(_default, { fonts: currentGoogleFonts, subsets: currentGoogleFontSubset });
};

var ThemeEditorProvider = function (_a) {
    var children = _a.children, _b = _a.disableGoogleFonts, disableGoogleFonts = _b === void 0 ? true : _b;
    var chakraTheme = react.useTheme();
    return (React__default["default"].createElement(recoil.RecoilRoot, null,
        React__default["default"].createElement(ThemeStateInitializer, { theme: chakraTheme }),
        !disableGoogleFonts && React__default["default"].createElement(GoogleFontFamiliesStateInitializer, null),
        children));
};

exports.BaseList = BaseList;
exports.BaseListItem = BaseListItem;
exports.BaseMenu = BaseMenu;
exports.BaseMenuItem = BaseMenuItem;
exports.ColorModeToggle = ColorModeToggle;
exports.EmptyBox = EmptyBox;
exports.ThemeDownloadButton = ThemeDownloadButton;
exports.ThemeEditor = ThemeEditor;
exports.ThemeEditorAccordion = ThemeEditorAccordion;
exports.ThemeEditorAccordionItem = ThemeEditorAccordionItem;
exports.ThemeEditorButton = ThemeEditorButton;
exports.ThemeEditorConfig = ThemeEditorConfig;
exports.ThemeEditorDrawer = ThemeEditorDrawer;
exports.ThemeEditorDrawerFooter = ThemeEditorDrawerFooter;
exports.ThemeEditorDrawerHeader = ThemeEditorDrawerHeader;
exports.ThemeEditorProvider = ThemeEditorProvider;
exports.ThemeEditorRootPanel = ThemeEditorRootPanel;
exports.ThemeIcon = ThemeIcon;
exports.ThemeResetPopup = ThemeResetPopup;
exports.ThemeStateInitializer = ThemeStateInitializer;
exports.googleFontFamiliesState = googleFontFamiliesState;
exports.safeJsonParse = safeJsonParse$1;
exports.setThemeBorderRadius = setThemeBorderRadius$5;
exports.setThemeBorderRadiuses = setThemeBorderRadiuses$5;
exports.setThemeColor = setThemeColor$5;
exports.setThemeColorPalette = setThemeColorPalette$5;
exports.setThemeColors = setThemeColors$5;
exports.setThemeShadow = setThemeShadow$5;
exports.setThemeShadows = setThemeShadows$5;
exports.setThemeSingleColor = setThemeSingleColor$5;
exports.setThemeSpacing = setThemeSpacing$5;
exports.setThemeSpacings = setThemeSpacings$5;
exports.setThemeTokens = setThemeTokens$5;
exports.setThemeTypograghyFontSizes = setThemeTypograghyFontSizes$5;
exports.setThemeTypographyFont = setThemeTypographyFont$5;
exports.setThemeTypographyFontSize = setThemeTypographyFontSize$5;
exports.setThemeTypographyFonts = setThemeTypographyFonts$5;
exports.setThemeTypographyLetterSpacing = setThemeTypographyLetterSpacing$5;
exports.setThemeTypographyLetterSpacings = setThemeTypographyLetterSpacings$5;
exports.setThemeTypographyLineHeight = setThemeTypographyLineHeight$5;
exports.setThemeTypographyLineHeights = setThemeTypographyLineHeights$5;
exports.theme = theme;
exports.themeColorKeys = themeColorKeys;
exports.themeEditorState = themeEditorState$1;
exports.useGoogleFontFamiliesState = useGoogleFontFamiliesState;
exports.useGoogleFontFamiliesValue = useGoogleFontFamiliesValue;
exports.useThemeEditor = useThemeEditor$1;
//# sourceMappingURL=index.js.map
